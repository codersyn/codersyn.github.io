<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>神秘菜鸟</title>
  
  <subtitle>好吧其实一点也不神秘，但菜是真的</subtitle>
  <link href="https://codersyn.github.io/atom.xml" rel="self"/>
  
  <link href="https://codersyn.github.io/"/>
  <updated>2023-04-16T14:00:52.619Z</updated>
  <id>https://codersyn.github.io/</id>
  
  <author>
    <name>Syn</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 acme.sh 配置自动续签 SSL 证书</title>
    <link href="https://codersyn.github.io/2022/06/24/%E4%BD%BF%E7%94%A8-acme-sh-%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E7%BB%AD%E7%AD%BE-SSL-%E8%AF%81%E4%B9%A6/"/>
    <id>https://codersyn.github.io/2022/06/24/%E4%BD%BF%E7%94%A8-acme-sh-%E9%85%8D%E7%BD%AE%E8%87%AA%E5%8A%A8%E7%BB%AD%E7%AD%BE-SSL-%E8%AF%81%E4%B9%A6/</id>
    <published>2022-06-24T09:37:12.000Z</published>
    <updated>2023-04-16T14:00:52.619Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><em>TLS</em>或传输层安全性及其前身<em>SSL</em>（代表安全套接字层）是用于将正常流量包装在受保护的加密包装器中的Web协议。</p><p>使用此技术，服务器可以在服务器和客户端之间安全地发送流量，而不会使消息被外部方拦截。证书系统还帮助用户验证他们正在连接的站点的身份。</p><p>在本指南中，我们将向你展示如何配置自动续签SSL证书，以便在Debian 10服务器上与Nginx Web服务器一起使用。</p><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><ul><li>一台 Debian 10 服务器、一个具有管理权限的非 root 用户和一个活动的防火墙。要设置这些东西，请遵循 <a href="https://sysy.su/2022/05/21/%E5%A6%82%E4%BD%95%E7%A7%91%E5%AD%A6%E7%9A%84%E4%BD%BF%E7%94%A8Debian/">Debian 10 教程的初始服务器设置</a>。</li><li>Nginx 安装在你的服务器上，遵循<a href="https://sysy.su/2022/05/25/%E5%A6%82%E4%BD%95%E5%9C%A8Debian%E4%B8%8A%E5%AE%89%E8%A3%85Nginx/">如何在 Debian 10 上安装 Nginx</a>。</li></ul><h2 id="步骤-1-—-安装-acme-sh"><a href="#步骤-1-—-安装-acme-sh" class="headerlink" title="步骤 1 — 安装 acme.sh"></a>步骤 1 — 安装 <a href="http://acme.sh/">acme.sh</a></h2><p><a href="https://acme.sh/">acme.sh</a> 是一个集成了 ACME 客户端协议的 Bash 脚本，作者是 <a href="https://twitter.com/neilpangxa">@neilpangxa</a>，按照<a href="https://github.com/acmesh-official/acme.sh">官方文档</a>说明，我们直接在 Linux 下安装。</p><p>安装acme前置依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install curl socat</span><br></pre></td></tr></table></figure><p>安装acme：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://get.acme.sh | sh -s email=username@example.com</span><br></pre></td></tr></table></figure><p>请注意替换 <code>username@example.com</code> 为你自己的邮箱，避免无法收到上游证书的邮件通知，比如 Let’s Encrypt 偶尔会错发证书，然后就会邮件通知你，这时候就需要重新签发一次证书了。</p><p>安装完成后重新加载 Bash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>然后也可以开启自动更新：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade --auto-upgrade</span><br></pre></td></tr></table></figure><h2 id="步骤-2-—-选择默认-CA"><a href="#步骤-2-—-选择默认-CA" class="headerlink" title="步骤 2 — 选择默认 CA"></a>步骤 2 — 选择默认 CA</h2><p>目前 <a href="http://acme.sh/">acme.sh</a> 支持四个正式环境 CA，分别是 Let’s Encrypt、Buypass、ZeroSSL 和 <a href="http://ssl.com/">SSL.com</a>，默认使用 ZeroSSL，如果需要更换可以使用如下命令：</p><p>切换 Let’s Encrypt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --set-default-ca --server letsencrypt</span><br></pre></td></tr></table></figure><p>切换 Buypass</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --set-default-ca --server buypass</span><br></pre></td></tr></table></figure><p>切换 ZeroSSL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --set-default-ca --server zerossl</span><br></pre></td></tr></table></figure><p>切换 <a href="http://ssl.com/">SSL.com</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --set-default-ca --server ssl.com</span><br></pre></td></tr></table></figure><p>切换 Google Public CA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --set-default-ca --server google</span><br></pre></td></tr></table></figure><h2 id="步骤-3-—-使用-DNS-API-验证签发证书"><a href="#步骤-3-—-使用-DNS-API-验证签发证书" class="headerlink" title="步骤 3 — 使用 DNS API 验证签发证书"></a>步骤 3 — 使用 DNS API 验证签发证书</h2><p><a href="http://acme.sh/">acme.sh</a>提供了三种验证方式：HTTP 方式、手动 DNS 方式和 DNS API 方式。<strong>推荐使用 DNS API 方式</strong>。</p><p>这里以 Cloudflare 为例，登录 Cloudflare Dash 后在 <a href="https://dash.cloudflare.com/profile/api-tokens">API Token</a> 菜单里查看你的<strong>Global API Key</strong>，复制备用。</p><p>接着在终端运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CF_Key=<span class="string">&quot;复制的Global API Key&quot;</span></span><br><span class="line"><span class="built_in">export</span> CF_Email=<span class="string">&quot;你的cloudflare邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后开启 <a href="http://acme.sh/">acme.sh</a> 的 DNS API 模式申请证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_cf -d example.com -d *.example.com</span><br></pre></td></tr></table></figure><p>请把<code>example.com</code>替换为你自己的域名。</p><h2 id="步骤-4-—-安装证书"><a href="#步骤-4-—-安装证书" class="headerlink" title="步骤 4 — 安装证书"></a>步骤 4 — 安装证书</h2><p>把证书安装到<code>/etc/ssl</code>目录下需要先给用户分配权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /etc/ssl</span><br></pre></td></tr></table></figure><p>请把<code>example.com</code>替换为你自己的域名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --install-cert -d example.com \</span><br><span class="line">--key-file       /etc/ssl/example.com.key  \</span><br><span class="line">--fullchain-file /etc/ssl/example.com.crt \</span><br><span class="line">--ca-file        /etc/ssl/example.com.ca.crt \</span><br><span class="line">--reloadcmd     <span class="string">&quot;sudo systemctl restart nginx&quot;</span></span><br></pre></td></tr></table></figure><p>对应的 Nginx 配置指定证书文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /etc/ssl/example.com.crt;</span><br><span class="line">ssl_certificate_key /etc/ssl/example.com.key;</span><br><span class="line">ssl_trusted_certificate /etc/ssl/example.com.ca.crt;</span><br></pre></td></tr></table></figure><h2 id="步骤-5-—-配置-Nginx-以使用-SSL"><a href="#步骤-5-—-配置-Nginx-以使用-SSL" class="headerlink" title="步骤 5 — 配置 Nginx 以使用 SSL"></a>步骤 5 — 配置 Nginx 以使用 SSL</h2><p>我们已经在<code>/etc/ssl</code>目录下创建了密钥和证书文件。现在我们只需要修改我们的Nginx配置就能利用这些证书了。</p><p>我们将对配置进行一些调整。</p><ol><li>我们将创建一个包含 SSL 密钥和证书文件位置的配置代码段。</li><li>我们将创建一个包含强 SSL 设置的配置代码段，这些设置将来可用于任何证书。</li><li>我们将调整我们的Nginx服务器块来处理SSL请求，并使用上面的两个代码段。</li></ol><p>这种配置Nginx的方法将使我们能够保持干净的服务器块，并将常见的配置段放入可重用的模块中。</p><h3 id="创建指向-SSL-密钥和证书的配置代码段"><a href="#创建指向-SSL-密钥和证书的配置代码段" class="headerlink" title="创建指向 SSL 密钥和证书的配置代码段"></a>创建指向 SSL 密钥和证书的配置代码段</h3><p>首先，让我们在<code>/etc/nginx/snippets</code>目录中创建一个新的Nginx配置代码段。</p><p>为了正确区分此文件的用途，我们称之为：<code>cer-local.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/snippets/cer-local.conf</span><br></pre></td></tr></table></figure><p>在此文件中，我们将证书配置文件的存放地址放到里面。将以下行添加到文件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /etc/ssl/example.com.crt;</span><br><span class="line">ssl_certificate_key /etc/ssl/example.com.key;</span><br><span class="line">ssl_trusted_certificate /etc/ssl/example.com.ca.crt;</span><br></pre></td></tr></table></figure><p>添加这些行后，保存并关闭文件。</p><h3 id="使用强加密设置创建配置代码段"><a href="#使用强加密设置创建配置代码段" class="headerlink" title="使用强加密设置创建配置代码段"></a>使用强加密设置创建配置代码段</h3><p>接下来，我们将创建另一个代码段，用于定义一些 SSL 设置。这将为Nginx设置一个强大的SSL密码套件，并启用一些高级功能，这将有助于保持我们的服务器安全。</p><p>我们将设置的参数可以在将来的Nginx配置中重用，因此我们将为文件指定一个通用名称：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/snippets/ssl-params.conf</span><br></pre></td></tr></table></figure><p>为了安全地设置Nginx SSL，我们将使用Remy van Elst在 <a href="https://cipherli.st/"><strong>Cipherli.st</strong></a> 网站上的建议。此站点旨在为流行软件提供易于使用的加密设置。</p><p><strong>注意：</strong><strong><a href="http://cipherli.st/">Cipherli.st</a></strong> 站点上的建议设置提供了强大的安全性。有时，这是以提高客户端兼容性为代价的。如果您需要支持较旧的客户端，可以通过单击页面上标记为“<strong>是，给我一个适用于旧版/旧版软件的密码套件</strong>”的链接来访问该列表。该列表可以替换为以下项目。</p><p>使用哪种配置的选择很大程度上取决于你需要支持的内容。它们都将提供出色的安全性。</p><p>出于我们的目的，我们可以完整地复制提供的设置。我们只需要做一些小的修改。</p><p>首先，我们将为上游请求添加首选的 DNS 解析程序，本指南将使用谷歌DNS作为DNS 解析程序。</p><p>其次，我们将注释掉设置严格传输安全标头的行。在取消注释此行之前，你应该花点时间阅读<a href="https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security">HTTP严格传输安全或HSTS</a>，特别是其<a href="https://hstspreload.org/">“预加载”功能</a>。预加载 HSTS 可提高安全性，但如果意外启用或错误启用，可能会产生深远的影响。</p><p>将以下内容复制到代码段文件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ssl_protocols TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_dhparam /etc/nginx/dhparam.pem;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;</span><br><span class="line">ssl_ecdh_curve secp384r1; <span class="comment"># Requires nginx &gt;= 1.1.0</span></span><br><span class="line">ssl_session_timeout  10m;</span><br><span class="line">ssl_session_cache shared:SSL:10m;</span><br><span class="line">ssl_session_tickets off; <span class="comment"># Requires nginx &gt;= 1.5.9</span></span><br><span class="line">ssl_stapling on; <span class="comment"># Requires nginx &gt;= 1.3.7</span></span><br><span class="line">ssl_stapling_verify on; <span class="comment"># Requires nginx =&gt; 1.3.7</span></span><br><span class="line">resolver 8.8.8.8 8.8.4.4 valid=300s;</span><br><span class="line">resolver_timeout 5s;</span><br><span class="line"><span class="comment"># Disable strict transport security for now. You can uncomment the following</span></span><br><span class="line"><span class="comment"># line if you understand the implications.</span></span><br><span class="line"><span class="comment"># add_header Strict-Transport-Security &quot;max-age=63072000; includeSubDomains; preload&quot;;</span></span><br><span class="line">add_header X-Frame-Options DENY;</span><br><span class="line">add_header X-Content-Type-Options nosniff;</span><br><span class="line">add_header X-XSS-Protection <span class="string">&quot;1; mode=block&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="生成-dhparam-pem"><a href="#生成-dhparam-pem" class="headerlink" title="生成 dhparam.pem"></a>生成 dhparam.pem</h3><p>OpenSSL 的 dhparam 用于生成和管理 dh 文件。dh(Diffie-Hellman) 是著名的密钥交换协议，它可以保证通信双方安全地交换密钥。</p><p>使用如下命令生成一个 <code>dhparam.pem</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo openssl dhparam -out /etc/nginx/dhparam.pem 2048</span><br></pre></td></tr></table></figure><h3 id="调整Nginx配置以使用SSL"><a href="#调整Nginx配置以使用SSL" class="headerlink" title="调整Nginx配置以使用SSL"></a>调整Nginx配置以使用SSL</h3><p>现在我们有了代码段，我们可以调整Nginx配置以启用SSL。</p><p>本指南假设你正在<code>/etc/nginx/sites-available/your_domain</code>目录中使用自定义服务器块配置文件，如安装Nginx的先决条件教程中<a href="https://sysy.su/2022/05/25/%E5%A6%82%E4%BD%95%E5%9C%A8Debian%E4%B8%8A%E5%AE%89%E8%A3%85Nginx/#%E6%AD%A5%E9%AA%A4-5-%E2%80%93-%E8%AE%BE%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9D%97">步骤5</a>所述。</p><p>现在，打开配置文件进行调整：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/your_domain</span><br></pre></td></tr></table></figure><p>如果遵循先决条件，则服务器块将如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    root /var/www/your_domain/html;</span><br><span class="line">    index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    server_name your_domain www.your_domain;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">            try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你文件的顺序可能不同，并且你可能具有一些其他自定义配置语句，这没关系，因为我们只需要更新SSL代码段就行。我们将新增一个监听443端口的服务器块以提供 SSL 流量，然后修改之前的服务器块自动将流量重定向到443端口 。</p><p><strong>注意：</strong>我们将使用302重定向，直到我们验证一切正常之后，可以将其更改为永久的301重定向。</p><p>在现有配置文件中，新建服务器块监听443端口以使用SSL，并用<code>include</code>导入我们之前创建的两个代码段：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line">    include snippets/cer-local.conf;</span><br><span class="line">    include snippets/ssl-params.conf;</span><br><span class="line"></span><br><span class="line">    root /var/www/your_domain/html;</span><br><span class="line">    index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    server_name your_domain www.your_domain;</span><br><span class="line"></span><br><span class="line">    . . .</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，将旧的服务器块修改如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">. . .</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    server_name your_domain www.your_domain;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 302 https://$server_name<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个基本配置，用于侦听80端口并执行重定向到 HTTPS，完成编辑后保存并关闭文件。</p><p>一个完整的配置文件可能如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line"></span><br><span class="line">    server_name your_domain www.your_domain;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 301 https://$server_name<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line">    include snippets/cer-local.conf;</span><br><span class="line">    include snippets/ssl-params.conf;</span><br><span class="line"></span><br><span class="line">    root /var/www/your_domain/html;</span><br><span class="line">    index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    server_name your_domain www.your_domain;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">            try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="步骤-6-—-调整防火墙"><a href="#步骤-6-—-调整防火墙" class="headerlink" title="步骤 6 — 调整防火墙"></a>步骤 6 — 调整防火墙</h2><p>如果按照先决条件指南的建议启用了防火墙，则需要调整设置以允许 SSL 流量。幸运的是，Nginx在安装时注册了一些配置文件。</p><p>我们可以通过键入以下内容来查看可用的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw app list</span><br></pre></td></tr></table></figure><p>你应该会看到如下列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">OutputAvailable applications:</span><br><span class="line">. . .</span><br><span class="line">  Nginx Full</span><br><span class="line">  Nginx HTTP</span><br><span class="line">  Nginx HTTPS</span><br><span class="line">. . .</span><br></pre></td></tr></table></figure><p>你可以通过键入以下内容来查看当前设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><p>如果你遵循了先决条件，它将如下所示，这意味着只允许将 HTTP 流量发送到 Web 服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">OutputStatus: active</span><br><span class="line"></span><br><span class="line">To                         Action      From</span><br><span class="line">--                         ------      ----</span><br><span class="line">OpenSSH                    ALLOW       Anywhere</span><br><span class="line">Nginx HTTP                 ALLOW       Anywhere</span><br><span class="line">OpenSSH (v6)               ALLOW       Anywhere (v6)</span><br><span class="line">Nginx HTTP (v6)            ALLOW       Anywhere (v6)</span><br></pre></td></tr></table></figure><p>为了另外允许HTTPS流量进入，我们可以允许“Nginx Full”配置文件，然后删除冗余的“Nginx HTTP”配置文件允许：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow <span class="string">&#x27;Nginx Full&#x27;</span></span><br><span class="line">sudo ufw delete allow <span class="string">&#x27;Nginx HTTP&#x27;</span></span><br></pre></td></tr></table></figure><p>你的状态现在应如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">OutputStatus: active</span><br><span class="line"></span><br><span class="line">To                         Action      From</span><br><span class="line">--                         ------      ----</span><br><span class="line">OpenSSH                    ALLOW       Anywhere</span><br><span class="line">Nginx Full                 ALLOW       Anywhere</span><br><span class="line">OpenSSH (v6)               ALLOW       Anywhere (v6)</span><br><span class="line">Nginx Full (v6)            ALLOW       Anywhere (v6)</span><br></pre></td></tr></table></figure><p>正确配置防火墙后，我们可以继续测试Nginx配置。</p><h2 id="步骤-7-启用Nginx中的更改"><a href="#步骤-7-启用Nginx中的更改" class="headerlink" title="步骤 7 - 启用Nginx中的更改"></a>步骤 7 - 启用Nginx中的更改</h2><p>现在我们已经进行了更改并调整了防火墙，我们可以重新启动Nginx来实现我们的新更改。</p><p>首先，我们应该检查以确保我们的文件中没有语法错误。我们可以通过键入以下内容来执行此操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果一切成功，你将获得如下所示的结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><p>如果输出与上述内容匹配，则配置文件没有语法错误。我们可以安全地重新启动Nginx来实现我们的更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><p>通过测试我们的Nginx配置，我们可以继续测试我们的设置。</p><h2 id="步骤-8-—-测试加密"><a href="#步骤-8-—-测试加密" class="headerlink" title="步骤 8 — 测试加密"></a>步骤 8 — 测试加密</h2><p>现在，我们已准备好测试 SSL 服务器。</p><p>打开 Web 浏览器，然后在地址栏中键入<code>https://</code>+服务器的域名或 IP：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://your_domain_or_server_IP</span><br></pre></td></tr></table></figure><p>如果不出意外查看浏览器地址栏，你将会看到一个安全的小锁。在这种情况下，意味着SSL证书正在加密你的连接。</p><p><img src="https://s1.ax1x.com/2022/06/24/jF1Dk6.png" alt="Nginx 自签名证书警告"></p><p>如果你为Nginx配置了自动将HTTP内容重定向到HTTPS的服务器块，你还可以检查重定向功能是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://server_domain_or_IP</span><br></pre></td></tr></table></figure><p>如果地址栏的<code>http://</code>自动变成了<code>https://</code>，则表示你的重定向工作正常。</p><h2 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h2><p>现在你的网站已将 Nginx 服务器配置为对客户端连接使用强加密。这将允许你安全地为请求提供服务，并防止外部各方读取你的流量。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&lt;em&gt;TLS&lt;/em&gt;或传输层安全性及其前身&lt;em&gt;SSL&lt;/em&gt;（代表安全套接字层）是用于将正常流量包装在受保护的加密包装器中的Web</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>一键DD脚本</title>
    <link href="https://codersyn.github.io/2022/06/24/%E4%B8%80%E9%94%AEDD%E8%84%9A%E6%9C%AC/"/>
    <id>https://codersyn.github.io/2022/06/24/%E4%B8%80%E9%94%AEDD%E8%84%9A%E6%9C%AC/</id>
    <published>2022-06-24T06:34:47.000Z</published>
    <updated>2023-04-16T14:00:52.618Z</updated>
    
    <content type="html"><![CDATA[<p>备份几个常用DD脚本。</p><p>一、</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh</span><br></pre></td></tr></table></figure><p>本脚本还提供一个灵活的自动重装系统脚本，你可以在安装系统前对IP等进行相应的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -qO AutoDD.sh <span class="string">&#x27;http://git.io/autodd.sh&#x27;</span> &amp;&amp; bash AutoDD.sh</span><br></pre></td></tr></table></figure><p>二、</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先运行:</span></span><br><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get update</span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update</span><br><span class="line"><span class="comment">#确保安装了所需软件:</span></span><br><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum install -y xz openssl gawk file</span><br><span class="line"><span class="comment">#下载及说明:</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; chmod a+x InstallNET.sh</span><br><span class="line">说明:</span><br><span class="line">        bash InstallNET.sh      -d/--debian [dist-name]</span><br><span class="line">                                -u/--ubuntu [dist-name]</span><br><span class="line">                                -c/--centos [dist-version]</span><br><span class="line">                                -v/--ver [32/i386|64/amd64]</span><br><span class="line">                                --ip-addr/--ip-gate/--ip-mask</span><br><span class="line">                                -apt/-yum/--mirror</span><br><span class="line">                                -dd/--image</span><br><span class="line">                                -a/-m</span><br><span class="line"><span class="comment"># dist-name: 发行版本代号</span></span><br><span class="line"><span class="comment"># dist-version: 发行版本号</span></span><br><span class="line"><span class="comment"># -apt/-yum/--mirror : 使用定义镜像</span></span><br><span class="line"><span class="comment"># -a/-m : 询问是否能进入VNC自行操作. -a 为不提示(一般用于全自动安装), -m 为提示.</span></span><br></pre></td></tr></table></figure><p>三、</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载脚本</span></span><br><span class="line">wget --no-check-certificate -qO ~/Network-Reinstall-System-Modify.sh <span class="string">&#x27;https://www.cxthhhhh.com/CXT-Library/Network-Reinstall-System-Modify/Network-Reinstall-System-Modify.sh&#x27;</span> &amp;&amp; chmod a+x ~/Network-Reinstall-System-Modify.sh</span><br><span class="line"><span class="comment">#进入安装选项</span></span><br><span class="line">bash ~/Network-Reinstall-System-Modify.sh -UI_Options</span><br><span class="line"><span class="comment">#合并下载脚本+进入安装选项</span></span><br><span class="line">wget --no-check-certificate -qO ~/Network-Reinstall-System-Modify.sh <span class="string">&#x27;https://www.cxthhhhh.com/CXT-Library/Network-Reinstall-System-Modify/Network-Reinstall-System-Modify.sh&#x27;</span> &amp;&amp; chmod a+x ~/Network-Reinstall-System-Modify.sh &amp;&amp; bash ~/Network-Reinstall-System-Modify.sh -UI_Options</span><br><span class="line"><span class="comment">#（高级用户使用）安装 裸机系统部署平台</span></span><br><span class="line">bash ~/Network-Reinstall-System-Modify.sh -CXT_Bare-metal_System_Deployment_Platform</span><br></pre></td></tr></table></figure><p>四、</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/installNET/master/Install.sh&quot;</span> &amp;&amp; chmod +x Install.sh &amp;&amp; ./Install.sh </span><br></pre></td></tr></table></figure><p>五、</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##镜像文件在OneDrive</span></span><br><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/dd-od.sh &amp;&amp; chmod +x dd-od.sh &amp;&amp; ./dd-od.sh</span><br><span class="line"><span class="comment">##镜像文件在GoogleDrive</span></span><br><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/veip007/dd/master/dd-gd.sh &amp;&amp; chmod +x dd-gd.sh &amp;&amp; ./dd-gd.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;备份几个常用DD脚本。&lt;/p&gt;
&lt;p&gt;一、&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>探针美化备份</title>
    <link href="https://codersyn.github.io/2022/06/24/%E6%8E%A2%E9%92%88%E7%BE%8E%E5%8C%96%E5%A4%87%E4%BB%BD/"/>
    <id>https://codersyn.github.io/2022/06/24/%E6%8E%A2%E9%92%88%E7%BE%8E%E5%8C%96%E5%A4%87%E4%BB%BD/</id>
    <published>2022-06-24T06:24:11.000Z</published>
    <updated>2023-04-16T14:00:52.620Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>网上白嫖的，修改了默认背景为随机二次元图片，你当然也可以嫖我。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 屏幕适配 */</span></span></span><br><span class="line"><span class="css"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1200px</span>) &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.ui</span><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">80%</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">767px</span>) &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.ui</span><span class="selector-class">.card</span>&gt;<span class="selector-class">.content</span>&gt;<span class="selector-class">.header</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.ui</span>), <span class="selector-class">.ui</span><span class="selector-class">.cards</span>&gt;<span class="selector-class">.card</span>&gt;<span class="selector-class">.content</span>&gt;<span class="selector-class">.header</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.ui</span>) &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">margin-top</span>: <span class="number">0.4em</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 整体图标 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">i</span><span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">1.2em</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 背景图片 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">content</span>: <span class="string">&quot; &quot;</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: fixed <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">z-index</span>: -<span class="number">1</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">top</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">right</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">bottom</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">left</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-position</span>: top <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-repeat</span>: no-repeat <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-size</span>: cover <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://www.dmoe.cc/random.php</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-family</span>: Arial,Helvetica,sans-serif <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 导航栏 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.large</span><span class="selector-class">.menu</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">55%</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 首页按钮 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.menu</span> <span class="selector-class">.active</span><span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 导航栏下拉框 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.dropdown</span> <span class="selector-class">.menu</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">80%</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 登陆按钮 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.nezha-primary-btn</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#000</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 大卡片 */</span></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> <span class="selector-class">.ui</span><span class="selector-class">.fluid</span><span class="selector-class">.accordion</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#fbfbfb</span>26 <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">0.4rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 小卡片 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.four</span><span class="selector-class">.cards</span>&gt;<span class="selector-class">.card</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">0.6rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#fafafa</span>a3 <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.wide</span><span class="selector-class">.column</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding-top</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding-bottom</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">height</span>: <span class="number">3.3rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.three</span><span class="selector-class">.wide</span><span class="selector-class">.column</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding-right</span>: <span class="number">0rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.wide</span><span class="selector-class">.column</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-top</span>: <span class="number">2rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.wide</span><span class="selector-class">.column</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-top</span>: <span class="number">2rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.description</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding-bottom</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 小鸡名 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.flag</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-right</span>: <span class="number">0.5rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 弹出卡片图标 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.header</span> &gt; <span class="selector-class">.info</span><span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-right</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.nezha-secondary-font</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#21ba45</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 进度条 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.progress</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">50rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.progress</span> <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">min-width</span>: <span class="number">1.8em</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">15px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">line-height</span>: <span class="number">1.65em</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.fine</span><span class="selector-class">.progress</span>&gt; <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#21ba45</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.progress</span>&gt; <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#000</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.progress</span><span class="selector-class">.fine</span> <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#21ba45</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.progress</span><span class="selector-class">.warning</span> <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#ff9800</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.progress</span><span class="selector-class">.error</span> <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#e41e10</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.progress</span><span class="selector-class">.offline</span> <span class="selector-class">.bar</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#000</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 上传下载 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.outline</span><span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-right</span>: <span class="number">1px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">i</span><span class="selector-class">.arrow</span><span class="selector-class">.alternate</span><span class="selector-class">.circle</span><span class="selector-class">.down</span><span class="selector-class">.outline</span><span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#21ba45</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">i</span><span class="selector-class">.arrow</span><span class="selector-class">.alternate</span><span class="selector-class">.circle</span><span class="selector-class">.up</span><span class="selector-class">.outline</span><span class="selector-class">.icon</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: red <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 弹出卡片小箭头 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.right</span><span class="selector-class">.center</span><span class="selector-class">.popup</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin</span>: -<span class="number">3px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0.914286em</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-<span class="attribute">transform-origin</span>: left <span class="number">50%</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">transform-origin</span>: left <span class="number">50%</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.bottom</span><span class="selector-class">.left</span><span class="selector-class">.popup</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-left</span>: <span class="number">1px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-top</span>: <span class="number">3px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.top</span><span class="selector-class">.left</span><span class="selector-class">.popup</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-left</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.top</span><span class="selector-class">.right</span><span class="selector-class">.popup</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-right</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.left</span><span class="selector-class">.center</span><span class="selector-class">.popup</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin</span>: -<span class="number">3px</span> .<span class="number">91428571em</span> <span class="number">0</span> <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-<span class="attribute">transform-origin</span>: right <span class="number">50%</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">transform-origin</span>: right <span class="number">50%</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.right</span><span class="selector-class">.center</span><span class="selector-class">.popup</span>:before,</span></span><br><span class="line"><span class="css">.ui.left.center.popup:before &#123;</span></span><br><span class="line"><span class="css">    border: <span class="number">0px</span> solid <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.top</span><span class="selector-class">.popup</span>:before &#123;</span></span><br><span class="line"><span class="css">    border-color: <span class="number">#fafafa</span>eb transparent transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.popup</span>:before &#123;</span></span><br><span class="line"><span class="css">    border-color: <span class="number">#fafafa</span>eb transparent transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.bottom</span><span class="selector-class">.left</span><span class="selector-class">.popup</span>:before &#123;</span></span><br><span class="line"><span class="css">    border-radius: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-color</span>: <span class="number">#fafafa</span>eb transparent transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-tap-highlight-<span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.bottom</span><span class="selector-class">.right</span><span class="selector-class">.popup</span>:before &#123;</span></span><br><span class="line"><span class="css">    border-radius: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-color</span>: <span class="number">#fafafa</span>eb transparent transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="number">#fafafa</span>eb <span class="meta">!important</span></span></span><br><span class="line"><span class="css">    -webkit-box-shadow: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-tap-highlight-<span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.top</span><span class="selector-class">.left</span><span class="selector-class">.popup</span>:before &#123;</span></span><br><span class="line"><span class="css">    border-radius: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-color</span>: <span class="number">#fafafa</span>eb transparent transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-tap-highlight-<span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.top</span><span class="selector-class">.right</span><span class="selector-class">.popup</span>:before &#123;</span></span><br><span class="line"><span class="css">    border-radius: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-color</span>: <span class="number">#fafafa</span>eb transparent transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-tap-highlight-<span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.left</span><span class="selector-class">.center</span><span class="selector-class">.popup</span>:before &#123;</span></span><br><span class="line"><span class="css">    border-radius: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-color</span>: <span class="number">#fafafa</span>eb transparent transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    -webkit-tap-highlight-<span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 弹出卡片 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.status</span><span class="selector-class">.cards</span> <span class="selector-class">.ui</span><span class="selector-class">.content</span><span class="selector-class">.popup</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">min-width</span>: <span class="number">20rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">line-height</span>: <span class="number">2rem</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border-radius</span>: <span class="number">5px</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#fafafa</span>eb <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-family</span>: Arial,Helvetica,sans-serif <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">padding</span>: <span class="number">1em</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 服务页 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.table</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: <span class="built_in">RGB</span>(<span class="number">225</span>,<span class="number">225</span>,<span class="number">225</span>,<span class="number">0.6</span>) <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.table</span> <span class="selector-tag">thead</span> <span class="selector-tag">th</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 服务页进度条 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.service-status</span> <span class="selector-class">.good</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#21ba45</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.service-status</span> <span class="selector-class">.danger</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: red <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.service-status</span> <span class="selector-class">.warning</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: orange <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"><span class="comment">/* 版权 */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.ui</span><span class="selector-class">.inverted</span><span class="selector-class">.segment</span>, <span class="selector-class">.ui</span><span class="selector-class">.primary</span><span class="selector-class">.inverted</span><span class="selector-class">.segment</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: <span class="number">#000</span> <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">background-color</span>: <span class="number">#fafafa</span>a3 <span class="meta">!important</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--Logo和版权--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> avatar=<span class="built_in">document</span>.querySelector(<span class="string">&quot;.item img&quot;</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> footer=<span class="built_in">document</span>.querySelector(<span class="string">&quot;div.is-size-7&quot;</span>)</span></span><br><span class="line"><span class="javascript">footer.innerHTML=<span class="string">&quot;Syn&#x27;s Servers&quot;</span></span></span><br><span class="line"><span class="javascript">footer.style.visibility=<span class="string">&quot;visible&quot;</span></span></span><br><span class="line"><span class="javascript">avatar.src=<span class="string">&quot;https://sysy.su/images/avatar.jpg&quot;</span></span></span><br><span class="line"><span class="javascript">avatar.style.visibility=<span class="string">&quot;visible&quot;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> faviconurl=<span class="string">&quot;https://sysy.su/images/avatar.jpg&quot;</span> ;                  </span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> link = <span class="built_in">document</span>.querySelector(<span class="string">&quot;link[rel*=&#x27;icon&#x27;]&quot;</span>) || <span class="built_in">document</span>.createElement(<span class="string">&#x27;link&#x27;</span>);</span></span><br><span class="line"><span class="javascript">link.type = <span class="string">&#x27;image/x-icon&#x27;</span>;</span></span><br><span class="line"><span class="javascript">link.rel = <span class="string">&#x27;shortcut icon&#x27;</span>;</span></span><br><span class="line"><span class="javascript">link.href = faviconurl;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>].appendChild(link);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;网上白嫖的，修改了默认背景为随机二次元图片，你当然也可以嫖我。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>如何在Debian上安装Nginx</title>
    <link href="https://codersyn.github.io/2022/05/25/%E5%A6%82%E4%BD%95%E5%9C%A8Debian%E4%B8%8A%E5%AE%89%E8%A3%85Nginx/"/>
    <id>https://codersyn.github.io/2022/05/25/%E5%A6%82%E4%BD%95%E5%9C%A8Debian%E4%B8%8A%E5%AE%89%E8%A3%85Nginx/</id>
    <published>2022-05-25T12:25:46.000Z</published>
    <updated>2023-04-16T14:00:52.620Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><a href="https://nginx.org/">Nginx</a>是世界上最受欢迎的Web服务器之一，负责托管互联网上一些最大和流量最高的网站。在大多数情况下，它比Apache更资源友好，可以用作Web服务器或反向代理。</p><p>在本指南中，我们将讨论如何在 Debian 10 服务器上安装 Nginx。</p><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><p>在开始本指南之前，你应该有一个配置了 sudo 权限的常规非 root 用户和激活防火墙的服务器。可以通过遵循 <a href="https://sysy.su/2022/05/21/%E5%A6%82%E4%BD%95%E7%A7%91%E5%AD%A6%E7%9A%84%E4%BD%BF%E7%94%A8Debian/">Debian 10 的初始服务器设置指南</a>来学习如何设置。</p><p>当你有可用的账户时，以非 root 用户身份登录以开始使用。</p><h2 id="步骤1-安装Nginx"><a href="#步骤1-安装Nginx" class="headerlink" title="步骤1 - 安装Nginx"></a>步骤1 - 安装Nginx</h2><p>因为 Nginx 在 Debian 的默认仓库中可用，所以可以使用包管理器<code>apt</code>从仓库中安装它。</p><p>由于这是我们在本会话中与系统的第一次交互，因此让我们首先更新本地包索引，以便我们可以访问最新的包列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>我们现在开始安装：<code>nginx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>当系统提示你确认安装时，按Y键继续，将 Nginx 和任何必需的依赖项安装到你的服务器上。</p><h2 id="步骤-2-–-调整防火墙"><a href="#步骤-2-–-调整防火墙" class="headerlink" title="步骤 2 – 调整防火墙"></a>步骤 2 – 调整防火墙</h2><p>在测试Nginx之前，需要调整防火墙软件以允许访问该服务。</p><p>查看ufw已知应用集成，方法是键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw app list</span><br></pre></td></tr></table></figure><p>你应该会获得应用程序配置文件的列表如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Output</span><br><span class="line">Available applications:</span><br><span class="line">...</span><br><span class="line">  Nginx Full</span><br><span class="line">  Nginx HTTP</span><br><span class="line">  Nginx HTTPS</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>如你所见，Nginx有三种配置文件可用：</p><ul><li><strong>Nginx Full</strong>：此配置文件同时打开<code>80</code>端口（正常，未加密的Web流量）和<code>443</code>端口（TLS / SSL加密流量）</li><li><strong>Nginx HTTP</strong>：此配置文件仅打开<code>80</code>端口（正常，未加密的Web流量）</li><li><strong>Nginx HTTPS</strong>：此配置文件仅打开<code>443</code>端口（TLS / SSL加密流量）</li></ul><p>建议你启用限制性最强的配置文件，该配置文件仍将允许已配置的流量。由于在本指南中我们尚未为服务器配置SSL，因此我们只需要在端口上允许HTTP的流量。</p><p>你可以通过键入以下内容来启用此功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow <span class="string">&#x27;Nginx HTTP&#x27;</span></span><br></pre></td></tr></table></figure><p>你可以通过键入以下内容来验证更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><p>你应该会在显示的输出中看到允许的 HTTP 流量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Output</span><br><span class="line">Status: active</span><br><span class="line"></span><br><span class="line">To                         Action      From</span><br><span class="line">--                         ------      ----</span><br><span class="line">OpenSSH                    ALLOW       Anywhere                  </span><br><span class="line">Nginx HTTP                 ALLOW       Anywhere                  </span><br><span class="line">OpenSSH (v6)               ALLOW       Anywhere (v6)             </span><br><span class="line">Nginx HTTP (v6)            ALLOW       Anywhere (v6)</span><br></pre></td></tr></table></figure><h2 id="步骤-3-–-检查-Web-服务器"><a href="#步骤-3-–-检查-Web-服务器" class="headerlink" title="步骤 3 – 检查 Web 服务器"></a>步骤 3 – 检查 Web 服务器</h2><p>在安装过程结束后，Debian 10 会启动 Nginx。Web 服务器应该已经启动并正在运行。</p><p>我们可以使用 init 系统进行检查，以确保服务正在运行，方法是键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Output</span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Wed 2019-07-03 12:52:54 UTC; 4min 23s ago</span><br><span class="line">     Docs: man:nginx(8)</span><br><span class="line"> Main PID: 3942 (nginx)</span><br><span class="line">    Tasks: 3 (<span class="built_in">limit</span>: 4719)</span><br><span class="line">   Memory: 6.1M</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─3942 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;</span><br><span class="line">           ├─3943 nginx: worker process</span><br><span class="line">           └─3944 nginx: worker process</span><br></pre></td></tr></table></figure><p>如上所示，该服务似乎已成功启动。但是，测试是否成功的最佳方法是从Nginx实际请求一个页面。</p><p>你可以访问默认的Nginx页面，通过浏览器输入服务器的IP地址来确认软件是否正常运行。如果你不知道服务器的 IP 地址，请尝试在服务器的命令提示符处键入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr show eth0 | grep inet | awk <span class="string">&#x27;&#123; print $2; &#125;&#x27;</span> | sed <span class="string">&#x27;s/\/.*$//&#x27;</span></span><br></pre></td></tr></table></figure><p>当你拥有服务器的 IP 地址时，请将其输入到浏览器的地址栏中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://your_server_ip</span><br></pre></td></tr></table></figure><p>你应该会看到默认的Nginx登录页面：</p><p><img src="https://assets.digitalocean.com/articles/nginx_1604/default_page.png" alt="Nginx 默认页面"></p><p>此页面是Nginx的默认主页，以向你显示服务器是否正常运行。</p><h2 id="步骤4-管理Nginx进程"><a href="#步骤4-管理Nginx进程" class="headerlink" title="步骤4 - 管理Nginx进程"></a>步骤4 - 管理Nginx进程</h2><p>现在，Web 服务器已启动并运行，让我们回顾一些基本的管理命令。</p><p>要停止 Web 服务器，请键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br></pre></td></tr></table></figure><p>要启动 Web 服务器，请键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start nginx</span><br></pre></td></tr></table></figure><p>要重启 Web 服务器，请键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><p>如果只是进行配置更改，Nginx通常可以在不断开连接的情况下重新加载。为此，请键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>默认情况下，Nginx会开机自启。如果这不是你想要的，则可以通过键入以下内容来禁用此行为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> nginx</span><br></pre></td></tr></table></figure><p>要重新启用开机自启，可以键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><h2 id="步骤-5-–-设置服务器块"><a href="#步骤-5-–-设置服务器块" class="headerlink" title="步骤 5 – 设置服务器块"></a>步骤 5 – 设置服务器块</h2><p>使用Nginx作为Web服务器时，<em>服务器块</em>（类似于Apache中的虚拟主机）可用于封装详细配置信息并在单个服务器上托管多个域。我们将设置一个名为 <strong>your_domain</strong> 的域。</p><p>Debian 10 上的 Nginx 默认启用了一个服务器块，该服务器块会读取位于<code>/var/www/html</code>下的Web页面。虽然这适用于单个站点，但如果你托管多个站点，则可能会变得难以管理。与其修改默认的页面，不如为 <strong>your_domain</strong> 网站创建一个新的Web目录，如果客户端请求与任何其他站点不匹配，才访问这个默认的网站页面<code>/var/www/html</code>。</p><p>按如下所示创建 <strong>your_domain</strong> 网站，使用标志<code>-p</code>创建任何必需的父目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/www/your_domain/html</span><br></pre></td></tr></table></figure><p>接下来，使用环境变量分配目录的所有权，<code>$USER</code>变量应引用你当前的系统用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> /var/www/your_domain/html</span><br></pre></td></tr></table></figure><p>如果你尚未修改<code>umask</code>值，则 Web 根的权限应该是正确的，但你可以通过键入以下内容来确保：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 755 /var/www/your_domain</span><br></pre></td></tr></table></figure><p>接下来，使用你喜欢的编辑器创建示例页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /var/www/your_domain/html/index.html</span><br></pre></td></tr></table></figure><p>在里面添加以下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Welcome to your_domain&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;Success! Your Nginx server is successfully configured <span class="keyword">for</span> &lt;em&gt;your_domain&lt;/em&gt;. &lt;/h1&gt;</span><br><span class="line">        &lt;p&gt;This is a sample page.&lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>完成后保存并关闭该文件。</p><p>为了让Nginx显示这些内容，我们需要创建一个服务器块，其中包含指向我们的网站目录的正确指令。与其直接修改默认配置文件，不如新增一个<code>/etc/nginx/sites-available/your_domain</code>的网站配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/your_domain</span><br></pre></td></tr></table></figure><p>粘贴以下配置块，该配置块类似于默认配置，但针对我们的新网站目录和域名进行了更新：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line"></span><br><span class="line">        root /var/www/your_domain/html;</span><br><span class="line">        index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">        server_name your_domain www.your_domain;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意看，我们用<code>root</code>设置了新的根目录，并用<code>server_name</code>更新了我们的域名。</p><p>然后让我们通过建立一个软链接把 <code>sites-available</code> 的配置指向 <code>sites-enabled</code> 来启用此服务器块，Nginx在启动的时候会从<code>sites-enabled</code>目录读取网站配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/nginx/sites-available/your_domain /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure><p>接下来，进行测试以确保Nginx文件中没有语法错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果没有任何问题，你将看到以下输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Output</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><p>配置测试通过后，重新启动Nginx以应用你的更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><p>现在你应该可以通过<code>http://your_domain</code>来访问到刚才新建的网页内容了：</p><p><img src="https://assets.digitalocean.com/articles/nginx_debian10/nginx_serverblock.png" alt="Nginx 服务器块"></p><h2 id="步骤6-熟悉重要的Nginx文件和目录"><a href="#步骤6-熟悉重要的Nginx文件和目录" class="headerlink" title="步骤6 - 熟悉重要的Nginx文件和目录"></a>步骤6 - 熟悉重要的Nginx文件和目录</h2><p>现在你已经知道如何管理Nginx服务器，还应该花几分钟时间熟悉一些重要的目录和文件。</p><h3 id="网页内容"><a href="#网页内容" class="headerlink" title="网页内容"></a>网页内容</h3><ul><li><code>/var/www/html</code>：实际的Web内容，默认情况下仅由你之前看到的默认Nginx页面组成，从网站根目录中提供。这可以通过更改Nginx配置文件来更改。</li></ul><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><ul><li><code>/etc/nginx</code>：Nginx 配置目录。所有Nginx配置文件都在这里。</li><li><code>/etc/nginx/nginx.conf</code>：主Nginx配置文件。可以对此进行修改以更改Nginx全局配置。</li><li><code>/etc/nginx/sites-available/</code>：可以存储每个站点服务器块的目录。Nginx不会使用在此目录中找到的配置文件，除非它们链接到<code>sites-enabled</code>目录。通常，所有服务器块配置都在此目录中完成，然后通过链接到其他目录来启用。</li><li><code>/etc/nginx/sites-enabled/</code>：存储已启用的站点服务器块的目录。通常，它们是通过链接<code>sites-available</code>目录中的配置文件来创建的。</li><li><code>/etc/nginx/snippets</code>：这个目录主要可以包含在其它Nginx配置文件中的配置片段, 重复的配置都可以重构为配置片段。</li></ul><h3 id="服务器日志"><a href="#服务器日志" class="headerlink" title="服务器日志"></a>服务器日志</h3><ul><li><code>/var/log/nginx/access.log</code>：对Web服务器的每个请求都默认记录在此日志文件中，除非你为Nginx配置了其他日志文件。</li><li><code>/var/log/nginx/error.log</code>：任何Nginx错误信息都将记录在此日志中。</li></ul><h2 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h2><p>现在，你已经安装了 Web 服务器，你可以尽情地向互联网展示你的个人网站了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nginx.org/&quot;&gt;Nginx&lt;/a&gt;是世界上最受欢迎的Web服务器之一，负责托管互联网上一些最大和流</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>如何科学的使用Debian</title>
    <link href="https://codersyn.github.io/2022/05/21/%E5%A6%82%E4%BD%95%E7%A7%91%E5%AD%A6%E7%9A%84%E4%BD%BF%E7%94%A8Debian/"/>
    <id>https://codersyn.github.io/2022/05/21/%E5%A6%82%E4%BD%95%E7%A7%91%E5%AD%A6%E7%9A%84%E4%BD%BF%E7%94%A8Debian/</id>
    <published>2022-05-21T11:33:36.000Z</published>
    <updated>2023-04-16T14:00:52.620Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>在本教程中，将学习一个全新的Debian服务器如何进行一些初始的服务器设置：</p><ul><li><p>以 <strong>root</strong> 用户身份登录</p></li><li><p>创建具有管理员权限的新用户</p></li><li><p>设置基本防火墙</p></li></ul><h2 id="步骤-1-—-以-Root-用户身份登录"><a href="#步骤-1-—-以-Root-用户身份登录" class="headerlink" title="步骤 1 — 以 Root 用户身份登录"></a>步骤 1 — 以 Root 用户身份登录</h2><p>以 <strong>root</strong> 用户身份登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@your_server_ip</span><br></pre></td></tr></table></figure><h3 id="关于Root"><a href="#关于Root" class="headerlink" title="关于Root"></a>关于Root</h3><p><strong>root</strong> 用户是 Linux 环境中具有非常广泛的特权的管理用户。由于 <strong>root</strong> 帐户的权限很高，<em>因此不建议</em>长期使用它，某些时候一些误操作可能会对系统造成不可挽回的损失。</p><h2 id="步骤-2-—-创建新用户"><a href="#步骤-2-—-创建新用户" class="headerlink" title="步骤 2 — 创建新用户"></a>步骤 2 — 创建新用户</h2><p>此示例创建一个名为 <strong>syn</strong> 的新用户，你可将其替换为任意你喜欢的用户名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser syn</span><br></pre></td></tr></table></figure><p>系统会让你设置一个密码，并要求填入一些基本信息，除密码外其他非必填，可按回车跳过。</p><h2 id="步骤-3-—-授予管理员权限"><a href="#步骤-3-—-授予管理员权限" class="headerlink" title="步骤 3 — 授予管理员权限"></a>步骤 3 — 授予管理员权限</h2><p>现在，我们创建了一个具有常规帐户权限的新用户，但是我们有时可能需要使用它执行管理任务。</p><p>为了避免必须注销普通用户并以<strong>root</strong>帐户重新登录，我们可以为普通帐户设置所谓的<em>超级用户</em>或者说<strong>root</strong>权限。</p><p>以 <strong>root 用户身份</strong>运行以下命令，将新用户添加到 <strong>sudo</strong> 组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -aG sudo syn</span><br></pre></td></tr></table></figure><p>现在，当你以普通用户身份登录时，你可以在命令之前键入<code>sudo</code>以超级用户权限运行命令。</p><h2 id="步骤-4-—-设置基本防火墙"><a href="#步骤-4-—-设置基本防火墙" class="headerlink" title="步骤 4 — 设置基本防火墙"></a>步骤 4 — 设置基本防火墙</h2><p>Debian 服务器可以使用防火墙来确保只允许与特定服务建立某些连接，在本指南中，我们将安装和使用 UFW 防火墙来帮助设置防火墙策略和管理。</p><p>我们可以使用包管理器来安装 UFW，更新本地索引以检索有关可用软件包的最新信息，可以通过键入以下内容安装 UFW 防火墙：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install ufw</span><br></pre></td></tr></table></figure><p>可以通过键入以下内容列出所有UFW防火墙可用的应用程序配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw app list</span><br></pre></td></tr></table></figure><p>我们需要确保防火墙允许SSH连接，以便下次可以重新登录。通过键入以下内容来允许连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow OpenSSH</span><br></pre></td></tr></table></figure><p>之后，我们可以通过键入以下内容来启用防火墙：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>通过键入以下内容看到UFW已经允许 SSH 连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw status</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">OutputStatus: active</span><br><span class="line"></span><br><span class="line">To             Action   From</span><br><span class="line">--             ------   ----</span><br><span class="line">OpenSSH          ALLOW    Anywhere</span><br><span class="line">OpenSSH (v6)     ALLOW    Anywhere (v6)</span><br></pre></td></tr></table></figure><p>由于<strong>防火墙当前阻止除 SSH 之外的所有连接</strong>，因此，如果安装和配置其他服务，则需要调整防火墙设置以允许可接受的流量进入。</p><h2 id="步骤-5-—-为普通用户启用外部访问"><a href="#步骤-5-—-为普通用户启用外部访问" class="headerlink" title="步骤 5 — 为普通用户启用外部访问"></a>步骤 5 — 为普通用户启用外部访问</h2><p>现在我们有一个日常使用的常规用户，我们需要确保我们可以直接通过SSH进入帐户。</p><h3 id="如果-root-帐户使用密码身份验证"><a href="#如果-root-帐户使用密码身份验证" class="headerlink" title="如果 root 帐户使用密码身份验证"></a>如果 root 帐户使用密码身份验证</h3><p>如果你<em>使用密码</em>登录到 <strong>root</strong> 帐户，则会为 SSH 启用密码身份验证。</p><p>现在，打开一个新的终端会话，并使用你的新用户名通过密码登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh syn@your_server_ip</span><br></pre></td></tr></table></figure><p>输入用户的密码后，你将会登录。</p><h3 id="如果-root-账户使用-SSH-密钥身份验证"><a href="#如果-root-账户使用-SSH-密钥身份验证" class="headerlink" title="如果 root 账户使用 SSH 密钥身份验证"></a>如果 root 账户使用 SSH 密钥身份验证</h3><p>如果你<em>使用 SSH 密钥</em>登录到 <strong>root</strong> 帐户，则会为 SSH <em>禁用</em>密码身份验证。你需要将本地公钥的副本添加到新用户的文件中才能成功登录。</p><p>由于公钥已经在服务器上的 <strong>root</strong> 帐户文件中，因此我们可以<code>cp</code>命令将该文件和目录复制到新用户目录中。之后，我们可以使用<code>chown</code>命令调整文件的所有权。</p><p>请把<code>syn</code>改为你自己的用户名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -r ~/.ssh /home/syn</span><br><span class="line">chown -R syn:syn /home/syn/.ssh</span><br></pre></td></tr></table></figure><p>该命令将整个目录复制到新用户的主目录，并将这个目录（以及其中的所有内容）的所有者更改为你指定的（默认情况下，Debian 会创建一个与你的用户名同名的组）用户。</p><p>现在，打开一个新的终端会话，并使用你的新用户名通过SSH登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh syn@your_server_ip</span><br></pre></td></tr></table></figure><p>现在你应该在不使用密码的情况下即可登录到新用户。</p><p>请记住，如果你需要使用管理权限运行命令，请在命令之前键入<code>sudo</code>，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo command_to_run</span><br></pre></td></tr></table></figure><h2 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h2><p>此时，你的服务器已经有了坚实的基础，你现在可以在服务器上安装所需的任何软件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;在本教程中，将学习一个全新的Debian服务器如何进行一些初始的服务器设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以 &lt;strong&gt;root&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>用curl实现网页自动签到</title>
    <link href="https://codersyn.github.io/2022/05/12/%E7%94%A8curl%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/"/>
    <id>https://codersyn.github.io/2022/05/12/%E7%94%A8curl%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/</id>
    <published>2022-05-12T11:10:27.000Z</published>
    <updated>2023-04-16T14:00:52.621Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近在网上看到一个免费分享iOS已购应用账号的网站，但是虽说免费，实则需要用积分来兑换，而积分通过充值或者签到来获取，作为资深白嫖党充值肯定是不会充值的，当然选择签到白嫖，不过签到讲究的就是一个日积月累，虽说动动手指就能完成的事，但是长期下来也是一件很累人的事，何况时不时还会忘记，所以这里直接利用curl挂个脚本每天自动定时签到。</p></blockquote><ol><li><p>先进入需要自动签到的网站：<a href="http://www.kolagame.xyz/">考拉爱分享 (kolagame.xyz)</a></p></li><li><p>正常登录网站，勾选“记住我”选项</p></li></ol><img src="https://s1.ax1x.com/2022/05/20/OL8B4A.png" title="" alt="" data-align="center"><ol start="3"><li>按F12打开开发者工具，切换到“网络”选项卡</li></ol><img src="https://s1.ax1x.com/2022/05/20/OLGm8I.png" title="" alt="" data-align="center"><ol start="4"><li>清除下面这些用不到的信息</li></ol><img src="https://s1.ax1x.com/2022/05/20/OLJBlt.png" title="" alt="" data-align="center"><ol start="5"><li>筛选器里选全部，然后点击签到按钮，会看到控制台弹出一些信息</li></ol><img src="https://s1.ax1x.com/2022/05/20/OLYiAe.png" title="" alt="" data-align="center"><ol start="6"><li>点击下面那个网页</li></ol><img src="https://s1.ax1x.com/2022/05/20/OLtXsx.png" title="" alt="" data-align="center"><p>可看到返回了一个json，msg后面的值是Unicode编码，转换成中文其实就是签到成功，获得50积分，那这个url就是我们需要的</p><ol start="7"><li>右键，复制curl</li></ol><img title="" src="https://s1.ax1x.com/2022/05/20/OLUygs.png" alt="" data-align="left"><p>此时如果新建一个记事本，粘贴进去，可看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://www.kolagame.xyz/wp-admin/admin-ajax.php&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Accept: application/json, text/javascript, */*; q=0.01&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Connection: keep-alive&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Content-Type: application/x-www-form-urlencoded; charset=UTF-8&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Cookie: wordpress_b31798e9c4af3742c**********9f864=W163843958869%7C1654226980%7C1m8GCqULeMKFksD1xfW*******6weDHRQuZDyo7QIWi7%7C9732d0bba8e6c70a*******09e456368c1458c95ad6ca6c67ad481348863f3b6c; pps_cookie_431=3_days; wordpress_logged_in_b31798e9c4af3742c2******64=W163843958869%7C1654226980%7C1m8GCqULeMKFksD1xfW******eDHRQuZDyo7QIWi7%7C5d4485412bcb7edb8dad16902bef84d9******e4a1d145b9209827aa153b&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Origin: http://www.kolagame.xyz&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Referer: http://www.kolagame.xyz/&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36 Edg/101.0.1210.47&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;X-Requested-With: XMLHttpRequest&#x27;</span> \</span><br><span class="line">  --data-raw <span class="string">&#x27;action=daily_sign&#x27;</span> \</span><br><span class="line">  --compressed \</span><br><span class="line">  --insecure</span><br></pre></td></tr></table></figure><p>如果现在把这串代码粘贴进服务器终端就代表点了一次签到，我们把它放在脚本里，然后服务器添加一个定时任务，到时间就自动执行一遍脚本，这样就实现了每天自动签到</p><p><em>注意：服务器如果为CentOS 7且版本较低的话不支持<code>--data-raw</code>选项，需要改为<code>--data</code></em></p><ol start="8"><li>创建一个日志文件夹存放json反馈，然后写个脚本并创建定时任务</li></ol><ul><li>创建存放日志的文件夹</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir qiandao</span><br></pre></td></tr></table></figure><p>注意此处是直接用root用户创建的文件夹，所以<code>qiandao</code>文件夹是在<code>root</code>目录下。</p><ul><li>编写脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> qiandao</span><br><span class="line">vi qiandao.sh</span><br></pre></td></tr></table></figure><p>然后脚本里写入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------------&quot;</span> &gt;&gt; /root/qiandao/qiandao.log</span><br><span class="line"><span class="built_in">echo</span> $(date +%F%n%T) &gt;&gt; /root/qiandao/qiandao.log</span><br><span class="line"><span class="built_in">echo</span> $(curl <span class="string">&#x27;http://www.kolagame.xyz/wp-admin/admin-ajax.php&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Accept: application/json, text/javascript, */*; q=0.01&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Connection: keep-alive&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Content-Type: application/x-www-form-urlencoded; charset=UTF-8&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Cookie: wordpress_b31798e9c4af3742c**********9f864=W163843958869%7C1654226980%7C1m8GCqULeMKFksD1xfW*******6weDHRQuZDyo7QIWi7%7C9732d0bba8e6c70a*******09e456368c1458c95ad6ca6c67ad481348863f3b6c; pps_cookie_431=3_days; wordpress_logged_in_b31798e9c4af3742c2******64=W163843958869%7C1654226980%7C1m8GCqULeMKFksD1xfW******eDHRQuZDyo7QIWi7%7C5d4485412bcb7edb8dad16902bef84d9******e4a1d145b9209827aa153b&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Origin: http://www.kolagame.xyz&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;Referer: http://www.kolagame.xyz/&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36 Edg/101.0.1210.47&#x27;</span> \</span><br><span class="line">  -H <span class="string">&#x27;X-Requested-With: XMLHttpRequest&#x27;</span> \</span><br><span class="line">  --data-raw <span class="string">&#x27;action=daily_sign&#x27;</span> \</span><br><span class="line">  --compressed \</span><br><span class="line">  --insecure) &gt;&gt; /root/qiandao/qiandao.log</span><br></pre></td></tr></table></figure><p>给脚本赋予执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x qiandao.sh</span><br></pre></td></tr></table></figure><p>这样执行脚本之后结果就会反馈到qiandao文件夹下的qiandao.log日志里，注意把括号里curl的值换成你自己的</p><ul><li>添加定时任务</li></ul><p><code>crontab -e</code>编辑crontab文件，写入定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 12 * * * /root/qiandao/qiandao.sh</span><br></pre></td></tr></table></figure><p>这样就会每天中午12点自动执行签到脚本，并把结果反馈到日志文件里</p><ol start="9"><li>查看反馈结果</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /root/qiandao/qiandao.log</span><br></pre></td></tr></table></figure><p>可在终端看到反馈信息：</p><img title="" src="https://s1.ax1x.com/2022/11/25/zY5H29.png" alt="" data-align="left"><p>这里Unicode转换为中文为“您今天已经签到了，明天再来吧！”，证明脚本生效。这样就解放双手不必每天手动签到了。</p><p>其实原理很简单，通过浏览器F12开发者工具抓包签到按钮，然后利用curl和crontab每天帮我们自动访问即可达到每天自动签到的目的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近在网上看到一个免费分享iOS已购应用账号的网站，但是虽说免费，实则需要用积分来兑换，而积分通过充值或者签到来获取，作为资深白嫖党充值肯定是不会充值的，当然选择签到白嫖，不过签到讲究的就是一个日积月累，虽说动动手指就能完成的事，但是长期下来也是一</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>四行代码激活Windows系统</title>
    <link href="https://codersyn.github.io/2022/03/10/%E5%9B%9B%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%BF%80%E6%B4%BBWindows%E7%B3%BB%E7%BB%9F/"/>
    <id>https://codersyn.github.io/2022/03/10/%E5%9B%9B%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%BF%80%E6%B4%BBWindows%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-03-10T12:13:45.000Z</published>
    <updated>2023-04-16T14:00:52.619Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>鉴于网上激活工具鱼龙混杂，支持激活的版本也不一样，这里直接白嫖一手<a href="https://www.ghxi.com/">果核</a>的KMS服务器，虽说自己搭建也可以，但一是服务器需要费用，二是需要花费时间维护，哪有白嫖来得香。</p></blockquote><h2 id="激活Windows"><a href="#激活Windows" class="headerlink" title="激活Windows"></a>激活Windows</h2><p>打开 CMD 输入以下命令：</p><h3 id="1-卸载"><a href="#1-卸载" class="headerlink" title="1.卸载"></a>1.卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr.vbs /upk</span><br></pre></td></tr></table></figure><p>会提示成功卸载密钥，没有密钥的会提示找不到产品密钥。</p><h3 id="2-安装密钥"><a href="#2-安装密钥" class="headerlink" title="2.安装密钥"></a>2.安装密钥</h3><ol><li><strong>Windows 11</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VK7JG-NPHTM-C97JM-9MPGT-3V66T</span><br></pre></td></tr></table></figure><p>win11直接复制密钥到设置里粘贴激活就行。</p><ol start="2"><li><strong>Windows 10</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>Windows 7</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4</span><br></pre></td></tr></table></figure><p>上面的密钥都是对应专业版，如果你是其他版本请在下面密钥列表里找到你自己对应的版本。</p><h3 id="3-设置激活服务器"><a href="#3-设置激活服务器" class="headerlink" title="3.设置激活服务器"></a>3.设置激活服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /skms kms.ghpym.com</span><br></pre></td></tr></table></figure><p>提示设置成功后进行下一步</p><h3 id="4-开始激活"><a href="#4-开始激活" class="headerlink" title="4.开始激活"></a>4.开始激活</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure><p>输入后回车，稍等一会，会提示激活成功。</p><p>顺便贴上office的激活方法，有需要自取。</p><h2 id="激活office"><a href="#激活office" class="headerlink" title="激活office"></a>激活office</h2><p>OFFICE必须是VOL版本，否则无法激活。一般下载的都是VOL版本，MSDN上有下载。</p><p>果核提供的 Office 2019 离线安装包：</p><p><a href="https://www.ghxi.com/office2019iso.html">Microsoft Office 2019 2021年10月批量许可版 - 果核剥壳</a></p><h3 id="运行CMD，切换到office安装目录"><a href="#运行CMD，切换到office安装目录" class="headerlink" title="运行CMD，切换到office安装目录"></a>运行CMD，切换到office安装目录</h3><p>拿office2016为例</p><p>找到你的office安装目录，比如：</p><p>32位：C:\Program Files (x86)\Microsoft Office\Office16</p><p>64位：C:\Program Files\Microsoft Office\Office16</p><p>Office2019只是2016的一个小小的升级，所以目录和2016一致</p><p>Office2019目录是office2016，Office16是office2016，Office15就是2013，Office14就是2010</p><p>然后目录对的话，该目录下面应该有个 OSPP.VBS</p><p>接下来我们就进入到这个目录下面，例如（请更改为自己的实际安装目录）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> “C:\Program Files\Microsoft Office\Office16”</span><br></pre></td></tr></table></figure><p>运行激活指令</p><p>查看已设置的激活码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript ospp.vbs /dstatus</span><br></pre></td></tr></table></figure><p>卸载原本的激活码【xxxxx为密钥后五位】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript ospp.vbs /unpkey:xxxxx</span><br></pre></td></tr></table></figure><p>设置激活码[到下面找]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript ospp.vbs /inpkey:xxxxx-xxxxx-xxxxx-xxxxx</span><br></pre></td></tr></table></figure><p>设置激活服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript ospp.vbs /sethst:kms.ghpym.com</span><br></pre></td></tr></table></figure><p>开始激活：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript ospp.vbs /act</span><br></pre></td></tr></table></figure><p>等待激活成功即可。</p><p>另外，激活office密钥不包含Visio，如果电脑同时安装Visio，需要再次操作上面的方式，把激活码换成Visio的即可。</p><h2 id="密钥列表"><a href="#密钥列表" class="headerlink" title="密钥列表"></a>密钥列表</h2><ol><li><p><strong>Windows 11</strong></p><blockquote><p>专业版安装密钥：VK7JG-NPHTM-C97JM-9MPGT-3V66T</p></blockquote></li><li><p><strong>Windows Server 2019</strong>  </p><blockquote><p>Windows Server 2019 Datacenter WMDGN-G9PQG-XVVXX-R3X43-63DFG<br>Windows Server 2019 Standard N69G4-B89J2-4G8F4-WWYCC-J464C<br>Windows Server 2019 Essentials WVDHN-86M7X-466P6-VHXV7-YY726</p></blockquote></li><li><p><strong>Windows Server 2016</strong>  </p><blockquote><p>Windows Server 2016 Datacenter CB7KF-BWN84-R7R2Y-793K2-8XDDG<br>Windows Server 2016 Standard WC2BQ-8NRM3-FDDYY-2BFGV-KHKQY<br>Windows Server 2016 Essentials JCKRF-N37P4-C2D82-9YXRT-4M63B</p></blockquote></li><li><p><strong>Windows 10, all supported Semi-Annual Channel versions</strong>  </p><blockquote><p>Windows 10 Pro W269N-WFGWX-YVC9B-4J6C9-T83GX<br>Windows 10 Pro N MH37W-N47XK-V7XM9-C7227-GCQG9<br>Windows 10 Pro for Workstations NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J<br>Windows 10 Pro for Workstations N 9FNHH-K3HBT-3W4TD-6383H-6XYWF<br>Windows 10 Pro Education 6TP4R-GNPTD-KYYHQ-7B7DP-J447Y<br>Windows 10 Pro Education N YVWGF-BXNMC-HTQYQ-CPQ99-66QFC<br>Windows 10 Education NW6C2-QMPVW-D7KKK-3GKT6-VCFB2<br>Windows 10 Education N 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ<br>Windows 10 Enterprise NPPR9-FWDCX-D2C8J-H872K-2YT43<br>Windows 10 Enterprise N DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4<br>Windows 10 Enterprise G YYVX9-NTFWV-6MDM3-9PT4T-4M68B<br>Windows 10 Enterprise G N 44RPN-FTY23-9VTTB-MP9BX-T84FV</p></blockquote></li><li><p><strong>Windows 10 LTSC/LTSB versions</strong>  </p><blockquote><p>Windows 10 Enterprise LTSC 2019 M7XTQ-FN8P6-TTKYV-9D4CC-J462D<br>Windows 10 Enterprise N LTSC 2019 92NFX-8DJQP-P6BBQ-THF9C-7CG2H<br>Windows 10 Enterprise LTSB 2016 DCPHK-NFMTC-H88MJ-PFHPY-QJ4BJ<br>Windows 10 Enterprise N LTSB 2016 QFFDN-GRT3P-VKWWX-X7T3R-8B639<br>Windows 10 Enterprise 2015 LTSB WNMTR-4C88C-JK8YV-HQ7T2-76DF9<br>Windows 10 Enterprise 2015 LTSB N 2F77B-TNFGY-69QQF-B8YKP-D69TJ</p></blockquote></li><li><p><strong>Windows Server 2012 R2</strong>  </p><blockquote><p>Windows Server 2012 R2 Server Standard D2N9P-3P6X9-2R39C-7RTCD-MDVJX<br>Windows Server 2012 R2 Datacenter W3GGN-FT8W3-Y4M27-J84CP-Q3VJ9<br>Windows Server 2012 R2 Essentials KNC87-3J2TX-XB4WP-VCPJV-M4FWM</p></blockquote></li><li><p><strong>Windows Server 2012</strong>  </p><blockquote><p>Windows Server 2012 BN3D2-R7TKB-3YPBD-8DRP2-27GG4<br>Windows Server 2012 N 8N2M2-HWPGY-7PGT9-HGDD8-GVGGY<br>Windows Server 2012 Single Language 2WN2H-YGCQR-KFX6K-CD6TF-84YXQ<br>Windows Server 2012 Country Specific 4K36P-JN4VD-GDC6V-KDT89-DYFKP<br>Windows Server 2012 Server Standard XC9B7-NBPP2-83J2H-RHMBY-92BT4<br>Windows Server 2012 MultiPoint Standard HM7DN-YVMH3-46JC3-XYTG7-CYQJJ<br>Windows Server 2012 MultiPoint Premium XNH6W-2V9GX-RGJ4K-Y8X6F-QGJ2G<br>Windows Server 2012 Datacenter 48HP8-DN98B-MYWDG-T2DCC-8W83P</p></blockquote></li><li><p><strong>Windows Server 2008 R2</strong>  </p><blockquote><p>Windows Server 2008 R2 Web 6TPJF-RBVHG-WBW2R-86QPH-6RTM4<br>Windows Server 2008 R2 HPC edition TT8MH-CG224-D3D7Q-498W2-9QCTX<br>Windows Server 2008 R2 Standard YC6KT-GKW9T-YTKYR-T4X34-R7VHC<br>Windows Server 2008 R2 Enterprise 489J6-VHDMP-X63PK-3K798-CPX3Y<br>Windows Server 2008 R2 Datacenter 74YFP-3QFB3-KQT8W-PMXWJ-7M648<br>Windows Server 2008 R2 for Itanium-based Systems GT63C-RJFQ3-4GMB6-BRFB9-CB83V</p></blockquote></li><li><p><strong>Windows Server 2008</strong>  </p><blockquote><p>Windows Web Server 2008 WYR28-R7TFJ-3X2YQ-YCY4H-M249D<br>Windows Server 2008 Standard TM24T-X9RMF-VWXK6-X8JC9-BFGM2<br>Windows Server 2008 Standard without Hyper-V W7VD6-7JFBR-RX26B-YKQ3Y-6FFFJ<br>Windows Server 2008 Enterprise YQGMW-MPWTJ-34KDK-48M3W-X4Q6V<br>Windows Server 2008 Enterprise without Hyper-V 39BXF-X8Q23-P2WWT-38T2F-G3FPG<br>Windows Server 2008 HPC RCTX3-KWVHP-BR6TB-RB6DM-6X7HP<br>Windows Server 2008 Datacenter 7M67G-PC374-GR742-YH8V4-TCBY3<br>Windows Server 2008 Datacenter without Hyper-V 22XQ2-VRXRG-P8D42-K34TD-G3QQC<br>Windows Server 2008 for Itanium-Based Systems 4DWFP-JF3DJ-B7DTH-78FJB-PDRHK</p></blockquote></li><li><p><strong>Windows 8.1</strong>  </p><blockquote><p>Windows 8.1 Pro GCRJD-8NW9H-F2CDX-CCM8D-9D6T9<br>Windows 8.1 Pro N HMCNV-VVBFX-7HMBH-CTY9B-B4FXY<br>Windows 8.1 Enterprise MHF9N-XY6XB-WVXMC-BTDCT-MKKG7<br>Windows 8.1 Enterprise N TT4HM-HN7YT-62K67-RGRQJ-JFFXW</p></blockquote></li><li><p><strong>Windows 8</strong>  </p><blockquote><p>Windows 8 Pro NG4HW-VH26C-733KW-K6F98-J8CK4<br>Windows 8 Pro N XCVCF-2NXM9-723PB-MHCB7-2RYQQ<br>Windows 8 Enterprise 32JNW-9KQ84-P47T8-D8GGY-CWCK7<br>Windows 8 Enterprise N JMNMF-RHW7P-DMY6X-RF3DR-X2BQT</p></blockquote></li><li><p><strong>Windows 7</strong>  </p><blockquote><p>Windows 7 Professional FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4<br>Windows 7 Professional N MRPKT-YTG23-K7D7T-X2JMM-QY7MG<br>Windows 7 Professional E W82YF-2Q76Y-63HXB-FGJG9-GF7QX<br>Windows 7 Enterprise 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH<br>Windows 7 Enterprise N YDRBP-3D83W-TY26F-D46B2-XCKRJ<br>Windows 7 Enterprise E C29WB-22CC8-VJ326-GHFJW-H9DH4</p></blockquote></li><li><p><strong>Office 2019</strong>  </p><blockquote><p>Office 专业增强版 2019<br>NMMKJ-6RK4F-KMJVX-8D9MJ-6MWKP  </p><p>Office 标准版 2019<br>6NWWJ-YQWMR-QKGCB-6TMB3-9D9HK</p><p>Project 专业版 2019<br>B4NPR-3FKK7-T2MBV-FRQ4W-PKD2B</p><p>Project 标准版 2019<br>C4F7P-NCP8C-6CQPT-MQHV9-JXD2M  </p><p>Visio 专业版 2019<br>9BGNQ-K37YR-RQHF2-38RQ3-7VCBB  </p><p>Visio 标准版 2019<br>7TQNQ-K3YQQ-3PFH7-CCPPM-X4VQ2  </p><p>Access 2019<br>9N9PT-27V4Y-VJ2PD-YXFMF-YTFQT  </p><p>Outlook 2019<br>7HD7K-N4PVK-BHBCQ-YWQRW-XW4VK  </p><p>Publisher 2019<br>G2KWX-3NW6P-PY93R-JXK2T-C9Y9V  </p><p>Skype for Business 2019<br>NCJ33-JHBBY-HTK98-MYCV8-HMKHJ</p></blockquote></li><li><p><strong>Office 2016</strong>  </p><blockquote><p>Office 专业增强版 2016<br>XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99  </p><p>Office 标准版2016<br>JNRGM-WHDWX-FJJG3-K47QV-DRTFM  </p><p>Project 专业版2016<br>YG9NW-3K39V-2T3HJ-93F3Q-G83KT</p><p>Visio 专业版2016<br>PD3PC-RHNGV-FXJ29-8JK7D-RJRJK  </p><p>Visio 标准版2016<br>7WHWN-4T7MP-G96JF-G33KR-W8GF4</p></blockquote></li><li><p><strong>Office 2013</strong>  </p><blockquote><p>Office 2013 Professional Plus YC7DK-G2NP3-2QQC3-J6H88-GVGXT<br>Office 2013 Standard KBKQT-2NMXY-JJWGP-M62JB-92CD4<br>Project 2013 Professional FN8TT-7WMH6-2D4X9-M337T-2342K<br>Project 2013 Standard 6NTH3-CW976-3G3Y2-JK3TX-8QHTT<br>Visio 2013 Professional C2FG9-N6J68-H8BTJ-BW3QX-RM3B3<br>Visio 2013 Standard J484Y-4NKBF-W2HMG-DBMJC-PGWR7</p></blockquote></li><li><p><strong>Office 2010</strong>  </p><blockquote><p>套件：<br>Office Professional Plus 2010 VYBBJ-TRJPB-QFQRF-QFT4D-H3GVB<br>Office Standard 2010 V7QKV-4XVVR-XYV4D-F7DFM-8R6BM<br>Office Home and Business 2010 D6QFG-VBYP2-XQHM7-J97RH-VVRCK</p><p>独立产品：<br>Access 2010 V7Y44-9T38C-R2VJK-666HK-T7DDX<br>Excel 2010 H62QG-HXVKF-PP4HP-66KMR-CW9BM<br>SharePoint Workspace 2010 QYYW6-QP4CB-MBV6G-HYMCJ-4T3J4<br>InfoPath 2010 K96W8-67RPQ-62T9Y-J8FQJ-BT37T<br>OneNote 2010 Q4Y4M-RHWJM-PY37F-MTKWH-D3XHX<br>Outlook 2010 7YDC2-CWM8M-RRTJC-8MDVC-X3DWQ<br>PowerPoint 2010 RC8FX-88JRY-3PF7C-X8P67-P4VTT<br>Project Professional 2010 YGX6F-PGV49-PGW3J-9BTGG-VHKC6<br>Project Standard 2010 4HP3K-88W3F-W2K3D-6677X-F9PGB<br>Publisher 2010 BFK7F-9MYHM-V68C7-DRQ66-83YTP<br>Word 2010 HVHB3-C6FV7-KQX9W-YQG79-CRY7T</p></blockquote></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;鉴于网上激活工具鱼龙混杂，支持激活的版本也不一样，这里直接白嫖一手&lt;a href=&quot;https://www.ghxi.com/&quot;&gt;果核&lt;/a&gt;的KMS服务器，虽说自己搭建也可以，但一是服务器需要费用，二是需要花费时间维护，哪有白嫖来得香。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>泰拉瑞亚修改教程 — 下</title>
    <link href="https://codersyn.github.io/2022/02/24/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%8B/"/>
    <id>https://codersyn.github.io/2022/02/24/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%8B/</id>
    <published>2022-02-24T10:18:45.000Z</published>
    <updated>2023-04-16T14:00:52.621Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是泰拉瑞亚修改教程系列的最后一章，如果你没看过相关教程，可以<a href="https://sysy.su/2021/10/03/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%8A/">从头看起</a>。</p></blockquote><p>学会修改以后，如果朋友眼馋找你要脚本，那他需要下载CE，然后打开你的CT脚本，选择terraria进程后才能开始修改。</p><p>如果有一定基础的话还好说，如果是小白那肯定一大堆问题，那你需要浪费很多时间来给他讲解，没有耐心的甚至直接就放弃了。</p><p>这时候我们为了方便，就可以把脚本制作成exe可执行文件，就是常说的游戏修改器，这样别人就不需要下载CE直接打开你制作的修改器就能修改，那么如何把我们的脚本制作成一个单机游戏修改器呢？</p><h2 id="终章-—-制作修改器"><a href="#终章-—-制作修改器" class="headerlink" title="终章 — 制作修改器"></a>终章 — 制作修改器</h2><p>绝大部分的程序语言都能做到这一点，使用什么语言来生成取决于你对该语言的掌握程度，但是作为一个只是单纯写修改器的没必要为了写个修改器就去学某门语言（不过如果这能成为你学编程的一个动力也不错）。</p><p>考虑到时间成本，我们这里就直接用CE自带的功能，这样即使初学者也能很快上手，不必花费大量时间去钻研程序语言。</p><h3 id="简陋的修改器"><a href="#简陋的修改器" class="headerlink" title="简陋的修改器"></a>简陋的修改器</h3><p>CE提供了一个生成修改器的模板，优点是非常适合初学者的使用，缺点是很简陋，还很丑。</p><p>打开CE，点击<strong>File</strong>，找到：</p><img src="https://s4.ax1x.com/2022/02/24/bFvq54.png" title="" alt="" data-align="center"><p>接下来你会看到这样一个界面：</p><img src="https://s4.ax1x.com/2022/02/24/bFz6hQ.png" title="" alt="" data-align="center"><p>我们先看中间部分：</p><img src="https://s4.ax1x.com/2022/02/24/bkp1iD.png" title="" alt="" data-align="center"><ul><li><p>Processname：这个选择你所修改游戏的进程名，我们是修改泰拉瑞亚，那就是Terraria.exe。</p></li><li><p>Popup trainer on keypress：这个设置你修改器的呼出方式，打勾后在下面的输入框里输入你想设置的快捷键即可，比如设置Home键，那按这个键的时候修改器就会弹出来，非必要。</p></li><li><p>Title：修改器标题，比如“泰拉瑞亚修改器”。</p></li><li><p>About text：点击修改器上的About的时候会弹出的文字信息，你可以在里面写一些修改器描述，作者信息等等。</p></li><li><p>Set Icon：设置修改器左上角显示的图标，格式为.ico。</p></li><li><p>Set Side Image：设置侧边栏的背景图片。</p></li><li><p>User can resize window：勾选后用户可以随意调整修改器窗口大小，一般建议不勾选。</p></li><li><p>Generate trainer：生成修改器。</p></li><li><p>Play sound on activate/deactivate：设置激活/关闭某个功能时候的声音。</p></li></ul><p>右边部分：</p><img src="https://s4.ax1x.com/2022/02/25/bkaoZ9.png" title="" alt="" data-align="center"><p>这个是我们生成的修改器界面，也就是说你生成后修改器就长这个样子。</p><p>左边部分：</p><img src="https://s4.ax1x.com/2022/02/25/bka7I1.png" title="" alt="" data-align="center"><p>这里设置热键，每个热键对应你写出来的功能。</p><p>根据描述那我们可以设置成这样：</p><img src="https://s4.ax1x.com/2022/02/25/bkaOxO.png" title="" alt="" data-align="center"><p>接下来点击左边部分的<strong>Add Hotkey</strong>来为修改器添加功能：</p><img src="https://s4.ax1x.com/2022/02/25/bkdmZj.png" title="" alt="" data-align="center"><p>因为我们的血量魔法这些地址是根据player地址来找到的，所以我们需要先激活<strong>获取player地址</strong>这个选项，选择后点击OK会来到下面这个界面：</p><img src="https://s4.ax1x.com/2022/02/25/bkdMiq.png" title="" alt="" data-align="center"><p>接下来点击<strong>Type the keys you want to set hotkey to</strong>下面的输入框键入一个热键，比如F1，设置完成大概这样：</p><img src="https://s4.ax1x.com/2022/02/25/bkdteJ.png" title="" alt="" data-align="center"><p>记得点击<strong>Apply</strong>添加你的热键到列表，接下来点击OK完成这个热键的添加：</p><img src="https://s4.ax1x.com/2022/02/25/bkdyOe.png" title="" alt="" data-align="center"><p>然后继续添加下一个热键和功能，还是点击Add Hotkey，这次我们选择设置生命上限的功能：</p><img src="https://s4.ax1x.com/2022/02/25/bkdIl8.png" title="" alt="" data-align="center"><p>这里我设置生命上限的热键为F2，注意下面的脚本功能选项选择<strong>Set value to</strong>，根据字面意思可了解为设置生命上限的数值为，这里我们设置为生命值的最大上限500：</p><img src="https://s4.ax1x.com/2022/02/25/bkdHmQ.png" title="" alt="" data-align="center"><p>点击Apply保存后继续添加魔法上限，同理：</p><img src="https://s4.ax1x.com/2022/02/25/bkwS6U.png" title="" alt="" data-align="center"><p>然后就是我们写好的脚本，一击必杀，无敌等功能：</p><img src="https://s4.ax1x.com/2022/02/25/bkwpXF.png" title="" alt="" data-align="center"><p>最后都添加完成后大概是这样：</p><img src="https://s4.ax1x.com/2022/02/25/bkwP0J.png" title="" alt="" data-align="center"><p>完成功能的添加后就可以开始生成修改器了，点击<strong>Generate trainer</strong>后进入下一个界面，需要注意的是<strong>保存的文件名不能含有中文</strong>，不然生成会报错：</p><img src="https://s4.ax1x.com/2022/02/25/bkwEfx.png" title="" alt="" data-align="center"><p>基本上保持默认就好，点击Generate开始生成。</p><p>生成后不出意外的话长这样：</p><img src="https://s4.ax1x.com/2022/02/25/bkD3N9.png" title="" alt="" data-align="center"><p>你会发现不仅丑，甚至文字显示都不全，但是这些都不重要，因为它确实能用。</p><p>这样你就可以把这玩意发给别人使用了，即使它很简陋，但是毕竟是我们一手造就的它，我们要对它给予更多的宽容。</p><h3 id="标准的修改器"><a href="#标准的修改器" class="headerlink" title="标准的修改器"></a>标准的修改器</h3><p>上面我们学会了如何制作一个简陋的修改器，这里就学习如何把这个简陋的修改器变得更好看一些，至少使它不那么简陋。</p><p>备用，后续再更。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这是泰拉瑞亚修改教程系列的最后一章，如果你没看过相关教程，可以&lt;a href=&quot;https://sysy.su/2021/10/03/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>泰拉瑞亚修改教程 — 中</title>
    <link href="https://codersyn.github.io/2022/02/17/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%AD/"/>
    <id>https://codersyn.github.io/2022/02/17/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%AD/</id>
    <published>2022-02-17T02:27:38.000Z</published>
    <updated>2023-04-16T14:00:52.621Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是泰拉瑞亚修改教程的第二章，上接<a href="https://sysy.su/2021/10/03/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%8A/">第一章</a>，如果你还没有看过相关教程，可以从头看起。</p></blockquote><h2 id="第二章-—-利用脚本进行复杂的修改"><a href="#第二章-—-利用脚本进行复杂的修改" class="headerlink" title="第二章 — 利用脚本进行复杂的修改"></a>第二章 — 利用脚本进行复杂的修改</h2><h3 id="一击必杀"><a href="#一击必杀" class="headerlink" title="一击必杀"></a>一击必杀</h3><p>一击必杀的功能其实直接修改武器伤害为9999也可以实现，但是特殊情况下就会失效，比如面对地牢守卫时，你的每次攻击永远只能对它造成1滴血的伤害，这就导致了无论你修改多高的伤害打到它的身上也只会扣1滴血。</p><img title="" src="https://s4.ax1x.com/2022/02/17/H4OweP.png" alt="地牢守卫" data-align="center"><p>既然高伤害不能实现秒杀，那就换一个思路，我们知道当你攻击一个怪物时，是两个触发事件，第一你的武器摸到了怪物，第二怪物扣除相应的血量，第一个不用研究，第二个怪物扣除血量我们可以改为当攻击到怪物后，不管怪物的血量是多少直接把怪物的血量变为0，变为0那当然就死了。下面是实现方法：</p><p>首先找到怪物的血值地址，随便找个怪物查看它的当前血量，这里史莱姆为例：</p><img src="https://s4.ax1x.com/2022/02/17/H5ierF.png" title="" alt="怪物血值" data-align="center"><p>可看到史莱姆的血量为120，那在CE里搜索4字节的120数值看看：</p><img src="https://s4.ax1x.com/2022/02/17/H5VQcq.png" title="" alt="CE界面" data-align="center"><p>看到结果还有很多，那再过滤一下，回到游戏攻击一下史莱姆：</p><img title="" src="https://s4.ax1x.com/2022/02/17/H5ZadS.png" alt="游戏界面" data-align="center"><p>攻击一下扣了2滴血，返回CE继续搜索118：</p><img src="https://s4.ax1x.com/2022/02/17/H5ZLdO.png" title="" alt="CE界面" data-align="center"><p>可以看到此时只有一个结果了，右键这个地址，<strong>查看是什么改写了这个地址</strong>：</p><img src="https://s4.ax1x.com/2022/02/17/H5e26I.png" title="" alt="CE界面" data-align="center"><p>回到游戏，再攻击一下史莱姆，然后返回CE，应该可以看到列表里多了一个地址，点击<strong>Show disassembler</strong>打开内存浏览界面：</p><img src="https://s4.ax1x.com/2022/02/17/H5mN4g.png" title="" alt="CE界面" data-align="center"><p>然后在这个地址上右键，复制其模块地址：</p><img src="https://s4.ax1x.com/2022/02/17/H5n4Jg.png" title="" alt="CE界面" data-align="center"><p>然后点击<strong>Tools</strong> -&gt; <strong>Auto Assemble</strong>：</p><img src="https://s4.ax1x.com/2022/02/17/H5uSSJ.png" title="" alt="CE界面" data-align="center"><p>再点击<strong>Template</strong> -&gt; <strong>Full Injection</strong>，然后框内粘贴刚才复制的模块地址：</p><img src="https://s4.ax1x.com/2022/02/17/H5Kd8e.png" title="" alt="CE界面" data-align="center"><p>然后分析下代码：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123; Game   : Terraria<span class="number">.</span>exe</span><br><span class="line"><span class="symbol">  Version:</span> </span><br><span class="line">  Date   : <span class="number">2022</span>-<span class="number">02</span>-<span class="number">17</span></span><br><span class="line">  Author : admin</span><br><span class="line"></span><br><span class="line">  This script does blah blah blah</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(address,Terraria<span class="number">.</span>NPC::StrikeNPC+<span class="number">742</span>)</span><br><span class="line">define(bytes,<span class="number">29</span> <span class="number">86</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>)</span><br><span class="line"></span><br><span class="line">[ENABLE]</span><br><span class="line"></span><br><span class="line">assert(address,bytes)</span><br><span class="line">alloc(newmem,<span class="number">$1000</span>)</span><br><span class="line"></span><br><span class="line">label(code)</span><br><span class="line">label(return)</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">newmem:</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">code:</span></span><br><span class="line">  <span class="keyword">sub</span> [<span class="built_in">esi</span>+<span class="number">00000100</span>],<span class="built_in">eax</span></span><br><span class="line">  <span class="keyword">jmp</span> return</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="keyword">jmp</span> newmem</span><br><span class="line">  <span class="keyword">nop</span></span><br><span class="line"><span class="symbol">return:</span></span><br><span class="line"></span><br><span class="line">[DISABLE]</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="built_in">db</span> bytes</span><br><span class="line">  // <span class="keyword">sub</span> [<span class="built_in">esi</span>+<span class="number">00000100</span>],<span class="built_in">eax</span></span><br><span class="line"></span><br><span class="line">dealloc(newmem)</span><br></pre></td></tr></table></figure><p>定位到<code>sub [esi+00000100],eax</code>，这段的意思是从<code>[esi+00000100]</code>这个指针地址里减去<code>eax</code>，因为我们是攻击怪物的时候触发的这个地址，所以很可能<code>[esi+00000100]</code>就是怪物的血值地址，而<code>eax</code>即扣除的血量数值。</p><p>既然怀疑，就尝试修改一下，因为<code>sub [esi+00000100],eax</code>的意思是从怪物血值里减去受到的伤害值，那我们注释掉原来的<code>sub [esi+00000100],eax</code>，改为<code>mov [esi+00000100],0</code>，这段意思是，把0这个值移到怪物血值里，这样当我们攻击怪物的时候触发的就是把0移到他的血量里面，相当于血量直接变为0，也就达到了秒杀效果：</p><img src="https://s4.ax1x.com/2022/02/18/HTBFoV.png" title="" alt="CE界面" data-align="center"><p>然后保存脚本：</p><img src="https://s4.ax1x.com/2022/02/18/HTD3Bn.png" title="" alt="CE界面" data-align="center"><p>接着激活脚本：</p><img src="https://s4.ax1x.com/2022/02/18/HTyTER.png" title="" alt="CE界面" data-align="center"><p>最后进入游戏看看有无效果：</p><img src="https://s4.ax1x.com/2022/02/18/HTcN6S.gif" title="" alt="一击必杀效果" data-align="center"><p>可以看到满血史莱姆一镐子就没了，当然不止史莱姆，任何怪物都是一击必杀，因为懒的原因我就不去找其他怪物试刀了，你们可以自行测试。</p><p>到这里一击必杀的效果就做出来了，而且不是修改高伤害那种<strong>伪·一击必杀</strong>，其实游戏修改很简单，难点在于思路，只要找对了思路，问题就会迎刃而解，当然也需要一些汇编基础才能看懂代码，但是最重要的还是思路。</p><h3 id="无敌"><a href="#无敌" class="headerlink" title="无敌"></a>无敌</h3><p>既然我们拥有了最强的矛，那当然也得拥有最强的盾不是，和一击必杀类似，也有<strong>伪·无敌</strong>，找到人物血量基址，然后锁定血量即可达到受伤秒回复的效果，但是这样有个弊端就是如果遇到伤害很高的怪物，或者怪物群殴你的时候，就很有可能血量还没回复就被敌人秒杀了，所以不算真正的无敌，那么如何实现真正的无敌呢。</p><p>同样的，当我们被攻击的时候也是两个触发事件，第一怪物或者怪物的技能碰到了我们的角色，第二我们的角色扣除相应的血量。看到这里是不是很熟悉，你说那我是不是可以根据第二个触发事件来修改，当怪物触碰到我们的时候，把那个受到的伤害值改为0？这样每次受到攻击都是无效的0点伤害，当然可以，你甚至还能把那个扣血的事件改为加血事件，这样当怪物攻击你的时候，你不仅不掉血，而且还加血，这样每个怪物在你眼里就成了无数个奶妈。</p><p>那下面试着实现一下这两个思路，首先找到角色的血量地址，进入游戏，查看当前的血量，可看到我当前的血量是79：</p><img src="https://s4.ax1x.com/2022/02/18/HTxhHH.png" title="" alt="角色当前血量" data-align="center"><p>返回CE搜索4字节的79：</p><img src="https://s4.ax1x.com/2022/02/18/HTzEb4.png" title="" alt="CE界面" data-align="center"><p>还有很多结果，返回游戏让怪物攻击一下，再查看当前血量变成了61：</p><img src="https://s4.ax1x.com/2022/02/18/HTz4MT.png" title="" alt="当前血量" data-align="center"><p>返回CE，搜索61，看到还剩两个结果：</p><img src="https://s4.ax1x.com/2022/02/18/H7SuwQ.png" title="" alt="CE界面" data-align="center"><p>通过修改血量数值判断出第二个为角色血量地址：</p><img src="https://s4.ax1x.com/2022/02/18/H7pWuT.png" title="" alt="CE界面" data-align="center"><p>右键该地址，<strong>查看是什么改写了这个地址</strong>：</p><img src="https://s4.ax1x.com/2022/02/18/H799PA.png" title="" alt="CE界面" data-align="center"><p>返回游戏，让怪物攻击一下，再返回CE，此时看到多了一个地址：</p><img src="https://s4.ax1x.com/2022/02/18/H7CpeU.png" title="" alt="" data-align="center"><p>其实到这里，和一击必杀的步骤都是一样的，根据那个步骤操作就行，这里咱们直接快进到代码部分：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123; Game   : Terraria<span class="number">.</span>exe</span><br><span class="line"><span class="symbol">  Version:</span> </span><br><span class="line">  Date   : <span class="number">2022</span>-<span class="number">02</span>-<span class="number">18</span></span><br><span class="line">  Author : admin</span><br><span class="line"></span><br><span class="line">  This script does blah blah blah</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(address,Terraria<span class="number">.</span>Player::Hurt+<span class="number">1177</span>)</span><br><span class="line">define(bytes,<span class="number">29</span> <span class="number">82</span> E4 <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>)</span><br><span class="line"></span><br><span class="line">[ENABLE]</span><br><span class="line"></span><br><span class="line">assert(address,bytes)</span><br><span class="line">alloc(newmem,<span class="number">$1000</span>)</span><br><span class="line"></span><br><span class="line">label(code)</span><br><span class="line">label(return)</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">newmem:</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">code:</span></span><br><span class="line">  <span class="keyword">sub</span> [<span class="built_in">edx</span>+000003E4],<span class="built_in">eax</span></span><br><span class="line">  <span class="keyword">jmp</span> return</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="keyword">jmp</span> newmem</span><br><span class="line">  <span class="keyword">nop</span></span><br><span class="line"><span class="symbol">return:</span></span><br><span class="line"></span><br><span class="line">[DISABLE]</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="built_in">db</span> bytes</span><br><span class="line">  // <span class="keyword">sub</span> [<span class="built_in">edx</span>+000003E4],<span class="built_in">eax</span></span><br><span class="line"></span><br><span class="line">dealloc(newmem)</span><br></pre></td></tr></table></figure><p>定位到<code>sub [edx+000003E4],eax</code>，如果你认真学习了一击必杀那个功能的实现，那你现在肯定知道<code>[edx+000003E4]</code>就是角色血量的地址，而<code>eax</code>即为受到的伤害值，<code>sub</code>是一个汇编指令，表示<strong>减</strong>，之前的<code>mov</code>代表<strong>数据传送</strong>，下面马上要用到的<code>add</code>表示<strong>加</strong>，其实很好理解，根据字面意思大概都能猜出来。那么这段的意思就是从当前血量里扣除受到的伤害值，我现在把<code>eax</code>改为0，那是不是就代表着，每次受到攻击都是0伤害值？</p><p>注释掉<code>sub [edx+000003E4],eax</code>，增加一条语句为<code>sub [edx+000003E4],0</code>：</p><img src="https://s4.ax1x.com/2022/02/18/H7FQkF.png" title="" alt="" data-align="center"><p>接着保存并激活脚本，进入游戏看看效果：</p><img src="https://s4.ax1x.com/2022/02/18/H7kMut.gif" title="" alt="无敌效果" data-align="center"><p>可以看到虽然还是有显示受到的伤害数字，但是并不会掉血，无敌效果①达成。</p><p>下面试下另一个效果，其实也很简单，只需要改动一点点代码：</p><img src="https://s4.ax1x.com/2022/02/18/H7A6df.png" title="" alt="" data-align="center"><p>可以看到原代码为<code>sub [edx+000003E4],eax</code>，代表从血值里扣掉受到的伤害值，之前我们改为<code>sub [edx+000003E4],0</code>，就表示从血值里扣掉0点伤害值，相当于不受伤，现在我们改为<code>add [edx+000003E4],1</code>，表示受到伤害时，把1加到血值里面，这样每次受到攻击都会加1滴血。</p><p>保存并激活脚本，进游戏看看效果：</p><img src="https://s4.ax1x.com/2022/02/18/H7Vfrn.gif" title="" alt="无敌效果2" data-align="center"><p>很好，无敌效果②达成。</p><p>但是会发现，有两个不完美的地方：①会显示受到伤害的数字，明明都已经无敌了，还显示个毛的伤害数字啊；②受到攻击时虽然不掉血，但是会被怪物撞得跳来跳去的，明明都已经无敌了，你这还疼得跳来跳去的算什么事啊？</p><p>那么问题来了，有第三种无敌方法吗？</p><p>俗话说得好，<strong>只要思想不滑坡，办法总比困难多</strong>，开头的时候说过，当被攻击的时候触发的是两个事件，一被怪物触碰到，二扣除所受伤害值的血量，我们根据第二个事件研究出了两个无敌思路，现在研究第一个事件，因为我们是先被怪物触碰到然后才会触发扣血的事件，那么如果移除这个碰撞事件，是不是就不会受到伤害了？</p><p>前面我们找到了扣血函数的地址：<code>Terraria.Player::Hurt+1177</code>，现在我们在这个地址下断点，看看能否找到关于碰撞的函数：</p><img src="https://s4.ax1x.com/2022/02/19/HHQWod.png" title="" alt="" data-align="center"><p>下断点后返回游戏，随便找个怪挨打一下，挨打后会发现游戏被断下了，那证明这个地址有戏，分析一下，因为是先挨打再扣血，而我们是直接在扣血地址下的断点，那这个call大概率只是处理一些扣血以及死亡的函数，我们点击<strong>Step Out</strong>跳出这个call：</p><img src="https://s4.ax1x.com/2022/02/19/HH8Zfs.png" title="" alt="" data-align="center"><p>跳出这个call后来到这个地址：</p><img src="https://s4.ax1x.com/2022/02/19/HH8Lj0.png" title="" alt="" data-align="center"><p>这里我们发现上面这个地址call了<code>Terraria.Player::Hurt</code>，根据翻译猜测这个<code>Terraria.Player::Hurt</code>应该是处理角色受到伤害的一个总函数，那我们直接nop掉这个地址是不是就不会受到碰撞伤害了呢：</p><img src="https://s4.ax1x.com/2022/02/19/HHJEzn.png" title="" alt="" data-align="center"><p><code>nop</code>会提示该地址长度为6字节，但是<code>nop</code>只有一个字节，点yes会自动填充剩下的5字节。然后点<strong>Run</strong>再回游戏看看效果：</p><img src="https://s4.ax1x.com/2022/02/19/HHJ5Wj.gif" title="" alt="" data-align="center"><p>可以看到已经移除了碰撞检测，那我们还原刚才<code>nop</code>的代码，通过编写脚本来达到目的，和之前一样，复制其模块地址，然后编写脚本：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123; Game   : Terraria<span class="number">.</span>exe</span><br><span class="line"><span class="symbol">  Version:</span> </span><br><span class="line">  Date   : <span class="number">2022</span>-<span class="number">02</span>-<span class="number">19</span></span><br><span class="line">  Author : admin</span><br><span class="line"></span><br><span class="line">  This script doe blah blah blah</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(address,Terraria<span class="number">.</span>Player::Update_NPCCollision+7A1)</span><br><span class="line">define(bytes,E8 8A FE D9 FF)</span><br><span class="line"></span><br><span class="line">[ENABLE]</span><br><span class="line"></span><br><span class="line">assert(address,bytes)</span><br><span class="line">alloc(newmem,<span class="number">$1000</span>)</span><br><span class="line"></span><br><span class="line">label(code)</span><br><span class="line">label(return)</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">newmem:</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">code:</span></span><br><span class="line">  <span class="keyword">call</span> Terraria<span class="number">.</span>Player::Hurt</span><br><span class="line">  <span class="keyword">jmp</span> return</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="keyword">jmp</span> newmem</span><br><span class="line"><span class="symbol">return:</span></span><br><span class="line"></span><br><span class="line">[DISABLE]</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="built_in">db</span> bytes</span><br><span class="line">  // <span class="keyword">call</span> Terraria<span class="number">.</span>Player::Hurt</span><br><span class="line"></span><br><span class="line">dealloc(newmem)</span><br></pre></td></tr></table></figure><p>刚才我们是直接<code>nop</code>掉达到了目的，那么脚本如何编写呢，其实很简单，注释掉<code>call Terraria.Player::Hurt</code>就行了，注释掉就不会执行这个call：</p><img src="https://s4.ax1x.com/2022/02/19/HHtd8H.png" title="" alt="" data-align="center"><p>和之前一样，保存脚本，然后激活脚本进游戏测试效果：</p><img src="https://s4.ax1x.com/2022/02/19/HHt5Mn.png" title="" alt="" data-align="center"><p>到这里，无敌功能就算是完美了，涉及到一些新东西如下断点，nop，call等等都是汇编知识，感兴趣的可以找相关书籍看看，也不用深究，这玩意学多了脑壳疼，单纯的写写修改器有点基础就够了，写修改器最重要的是思路。</p><h3 id="极速"><a href="#极速" class="headerlink" title="极速"></a>极速</h3><p><strong>天下武功，唯快不破</strong>，只要我跑得够快，敌人就摸不到我。这个功能就来讲一下如何修改移动速度，别的不说，用来跑图是真的好使。</p><p>如何找到移动速度这个地址呢，毕竟你不知道初始移动速度是多少，跑起来又是多少。但是如果你学过上一章的话，那你肯定记得利用角色基址来获取到其他地址这个操作，这里就不再赘述，没看过的去上一章看看。</p><p>这里通过搜索<strong>speed</strong>关键词看能不能搜索出移动速度的地址来：</p><img src="https://s4.ax1x.com/2022/02/20/HOJWfU.png" title="" alt="" data-align="center"><p>很明显这个<strong>moveSpeed</strong>就是我们要找的移动速度，我们按<kbd>A</kbd>键把这个地址添加到CE列表里：</p><img src="https://s4.ax1x.com/2022/02/20/HOYNu9.png" title="" alt="" data-align="center"><p>可以看到它的值为单精度浮点数的1，那表明我们移动的时候速度为1，尝试修改一下为5，但是会发现返回游戏自动就改回1了，也就是说我们无法直接修改。</p><p>那<strong>查看是什么改写了这个地址</strong>：</p><img src="https://s4.ax1x.com/2022/02/20/HOYbuj.png" title="" alt="" data-align="center"><p>返回游戏会发现CE里跳出了一个地址，看到它的指令为<code>fstp dword ptr [esi+00000458]</code>，意思是将栈顶的值储存到<code>[esi+00000458]</code>这个指针地址里，然后弹出栈。既然下面有出栈，上面肯定就有一个入栈，我们浏览相关内存区域看看：</p><img src="https://s4.ax1x.com/2022/02/20/HOYzCT.png" title="" alt="" data-align="center"><p>果然发现上面有一个<code>fld1</code>，它表示将浮点数1储存到栈顶：</p><img title="" src="https://s4.ax1x.com/2022/02/20/HO5sT1.png" alt="" data-align="center"><p>分析一下，<code>fld1</code>将1压入栈顶，然后<code>fstp dword ptr [esi+00000458]</code>又将1储存到<code>[esi+00000458]</code>里，那显而易见的，<code>[esi+00000458]</code>这个指针地址里储存的就是移动速度的值。</p><p>那么老规矩，在这个地址上写脚本：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123; Game   : Terraria<span class="number">.</span>exe</span><br><span class="line"><span class="symbol">  Version:</span> </span><br><span class="line">  Date   : <span class="number">2022</span>-<span class="number">02</span>-<span class="number">20</span></span><br><span class="line">  Author : admin</span><br><span class="line"></span><br><span class="line">  This script does blah blah blah</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(address,Terraria<span class="number">.</span>Player::ResetEffects+FE)</span><br><span class="line">define(bytes,D9 9E <span class="number">58</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>)</span><br><span class="line"></span><br><span class="line">[ENABLE]</span><br><span class="line"></span><br><span class="line">assert(address,bytes)</span><br><span class="line">alloc(newmem,<span class="number">$1000</span>)</span><br><span class="line"></span><br><span class="line">label(code)</span><br><span class="line">label(return)</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">newmem:</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">code:</span></span><br><span class="line">  <span class="keyword">fstp</span> <span class="built_in">dword</span> <span class="built_in">ptr</span> [<span class="built_in">esi</span>+<span class="number">00000458</span>]</span><br><span class="line">  <span class="keyword">jmp</span> return</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="keyword">jmp</span> newmem</span><br><span class="line">  <span class="keyword">nop</span></span><br><span class="line"><span class="symbol">return:</span></span><br><span class="line"></span><br><span class="line">[DISABLE]</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="built_in">db</span> bytes</span><br><span class="line">  // <span class="keyword">fstp</span> <span class="built_in">dword</span> <span class="built_in">ptr</span> [<span class="built_in">esi</span>+<span class="number">00000458</span>]</span><br><span class="line"></span><br><span class="line">dealloc(newmem)</span><br></pre></td></tr></table></figure><p>既然<code>fstp dword ptr [esi+00000458]</code>是将1存到移动速度的地址里，那导致我们的移动速度只有1，现在我们不要这段指令，注释掉，然后我们通过<code>mov</code>指令把我们想要的速度值放到速度的指针地址里，比如5：</p><img src="https://s4.ax1x.com/2022/02/20/HOrcJs.png" title="" alt="" data-align="center"><p>请注意，移动速度是一个单精度的浮点数，需要在5的前面加个(float)强制转为浮点数，如果直接写整数的话肯定会出问题，因为浮点数在内存的存储方式与整数不一样。</p><p>保存脚本后激活脚本进游戏看看效果：</p><p><img src="https://s4.ax1x.com/2022/02/20/HOfQy9.gif"></p><p>效果显著，如果你觉得5还是慢了，可以再改高一点，但是不宜过高，因为实测体验不好。</p><h3 id="无限召唤"><a href="#无限召唤" class="headerlink" title="无限召唤"></a>无限召唤</h3><p>现在我们最强的矛与盾都有了，已经站在了世界之巅，这时候就需要一群小弟来衬托自己的身份，毕竟打个史莱姆都要自己动手显得很没有逼格。但是泰拉瑞亚原版最多只能召唤11个小弟，开玩笑，世界最强怎么只能拥有11个小弟，这个功能就讲讲怎么突破召唤限制。</p><p>老规矩，通过角色基址找到最大召唤数量的地址：</p><img src="https://s4.ax1x.com/2022/02/22/bSsfud.png" title="" alt="" data-align="center"><p>这里通过搜索<strong>max</strong>找到了<strong>maxMinions</strong>，这就是我们要找的最大召唤数量的地址，下面的<strong>numMinions</strong>是目前召唤出来的小弟数量，我们按<kbd>A</kbd>键把<strong>maxMinions</strong>添加到CE地址列表：</p><img src="https://s4.ax1x.com/2022/02/22/bS6vt0.png" title="" alt="" data-align="center"><p>直接修改的话发现会被系统自动改回来，那右键这个地址<strong>查看是什么改写了它</strong>，返回游戏触发一下会发现CE里多了一个地址，我们选中这个地址，并浏览相关内存区域：</p><img src="https://s4.ax1x.com/2022/02/22/bScsNq.png" title="" alt="" data-align="center"><p>看到后面的<code>mov [esi+00000298],00000001</code>，很明显<code>[esi+00000298]</code>就是最大召唤数量，那么意思就是把1移到最大召唤数量的地址里：</p><img title="" src="https://s4.ax1x.com/2022/02/22/bSczVA.png" alt="" data-align="center"><p>那么我们通过脚本把这个1改为我们想要的最大召唤数量就行了：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123; Game   : Terraria<span class="number">.</span>exe</span><br><span class="line"><span class="symbol">  Version:</span> </span><br><span class="line">  Date   : <span class="number">2022</span>-<span class="number">02</span>-<span class="number">22</span></span><br><span class="line">  Author : admin</span><br><span class="line"></span><br><span class="line">  This script does blah blah blah</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(address,Terraria<span class="number">.</span>Player::ResetEffects+30A)</span><br><span class="line">define(bytes,C7 <span class="number">86</span> <span class="number">98</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>)</span><br><span class="line"></span><br><span class="line">[ENABLE]</span><br><span class="line"></span><br><span class="line">assert(address,bytes)</span><br><span class="line">alloc(newmem,<span class="number">$1000</span>)</span><br><span class="line"></span><br><span class="line">label(code)</span><br><span class="line">label(return)</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">newmem:</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">code:</span></span><br><span class="line">  <span class="keyword">mov</span> [<span class="built_in">esi</span>+<span class="number">00000298</span>],<span class="number">00000001</span></span><br><span class="line">  <span class="keyword">jmp</span> return</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="keyword">jmp</span> newmem</span><br><span class="line">  <span class="keyword">nop</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">return:</span></span><br><span class="line"></span><br><span class="line">[DISABLE]</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="built_in">db</span> bytes</span><br><span class="line">  // <span class="keyword">mov</span> [<span class="built_in">esi</span>+<span class="number">00000298</span>],<span class="number">00000001</span></span><br><span class="line"></span><br><span class="line">dealloc(newmem)</span><br></pre></td></tr></table></figure><p>这应该算是最容易编写的一个脚本了吧，只需要改动一下数字就可以了，它是一个十六进制的4字节数字，比如我改为000000FF对应的十进制数量就是255个：</p><img src="https://s4.ax1x.com/2022/02/22/bSRb80.png" title="" alt="" data-align="center"><p>如果你觉得255个少了，可以适量增加，但是过多的召唤物会增加你电脑的负担，255个完全够用了，保存脚本并激活它，进入游戏看看效果：</p><img src="https://s4.ax1x.com/2022/02/22/bS40zt.gif" title="" alt="" data-align="center"><p>可以看见虽然才255个，但是肉眼可见的卡顿，电脑配置不好的话就很影响体验。</p><p>这里我修改了星尘龙法杖的弹幕数量，所以挥一下就能召唤很多个，如果你是放在物品栏第一个格子修改的话，弹幕数量在<strong>inventory - Array[0] - useTime</strong>，对应的偏移为<strong>D0 - 8 - AC</strong>，值越小数量越多，改为0就能一下召唤很多个了。</p><h3 id="备用，后续再更。"><a href="#备用，后续再更。" class="headerlink" title="备用，后续再更。"></a>备用，后续再更。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这是泰拉瑞亚修改教程的第二章，上接&lt;a href=&quot;https://sysy.su/2021/10/03/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>备份一个不错的跳转单页</title>
    <link href="https://codersyn.github.io/2022/02/14/%E5%A4%87%E4%BB%BD%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%94%99%E7%9A%84%E8%B7%B3%E8%BD%AC%E5%8D%95%E9%A1%B5/"/>
    <id>https://codersyn.github.io/2022/02/14/%E5%A4%87%E4%BB%BD%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%94%99%E7%9A%84%E8%B7%B3%E8%BD%AC%E5%8D%95%E9%A1%B5/</id>
    <published>2022-02-14T05:18:19.000Z</published>
    <updated>2023-04-16T14:00:52.620Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为最近有用到单页跳转的功能，发现一个挺有黑客气氛的跳转页面，备份一下。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-cn&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;5; URL=https://synblog.gq/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>跳转页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="keyword">@import</span> url(<span class="attribute">https</span>://fonts.googleapis.com/css?family=Source+Code+<span class="attribute">Pro</span>:<span class="number">400</span>);</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">html</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(<span class="number">#222922</span>, <span class="number">#000500</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">font-family</span>: <span class="string">&quot;Source Code Pro&quot;</span>, monospace;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.word</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">2.5em</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">2.5em</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">2.5em</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">50</span>, <span class="number">255</span>, <span class="number">50</span>, <span class="number">0.5</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">100</span>, <span class="number">255</span>, <span class="number">100</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.word</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>) <span class="built_in">scale</span>(<span class="number">0.9</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">transition</span>: transform <span class="number">500ms</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.word</span> <span class="selector-class">.done</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#6f6</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>) <span class="built_in">scale</span>(<span class="number">1</span>);</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.overlay</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(transparent <span class="number">0%</span>, <span class="built_in">rgba</span>(<span class="number">10</span>, <span class="number">16</span>, <span class="number">10</span>, <span class="number">0.5</span>) <span class="number">50%</span>);</span></span><br><span class="line"><span class="css">            <span class="attribute">background-size</span>: <span class="number">1000px</span> <span class="number">2px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/lettering.js/0.6.1/jquery.lettering.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;word&quot;</span>&gt;</span>LOADING...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;overlay&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">Ticker</span>(<span class="params">elem</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            elem.lettering();</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.done = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.cycleCount = <span class="number">5</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.cycleCurrent = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;*()-_=+&#123;&#125;|[]\\;\&#x27;:&quot;&lt;&gt;?,./`~&#x27;</span>.split(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.charsCount = <span class="built_in">this</span>.chars.length;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.letters = elem.find(<span class="string">&#x27;span&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.letterCount = <span class="built_in">this</span>.letters.length;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.letterCurrent = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.letters.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $this = $(<span class="built_in">this</span>);</span></span><br><span class="line"><span class="javascript">                $this.attr(<span class="string">&#x27;data-orig&#x27;</span>, $this.text());</span></span><br><span class="line"><span class="javascript">                $this.text(<span class="string">&#x27;-&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Ticker.prototype.getChar = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">this</span>.chars[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="built_in">this</span>.charsCount)];</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Ticker.prototype.reset = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.done = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.cycleCurrent = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.letterCurrent = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.letters.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $this = $(<span class="built_in">this</span>);</span></span><br><span class="line"><span class="javascript">                $this.text($this.attr(<span class="string">&#x27;data-orig&#x27;</span>));</span></span><br><span class="line"><span class="javascript">                $this.removeClass(<span class="string">&#x27;done&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.loop();</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Ticker.prototype.loop = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> self = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.letters.each(<span class="function"><span class="keyword">function</span> (<span class="params">index, elem</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> $elem = $(elem);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (index &gt;= self.letterCurrent) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> ($elem.text() !== <span class="string">&#x27; &#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        $elem.text(self.getChar());</span></span><br><span class="line"><span class="javascript">                        $elem.css(<span class="string">&#x27;opacity&#x27;</span>, <span class="built_in">Math</span>.random());</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (<span class="built_in">this</span>.cycleCurrent &lt; <span class="built_in">this</span>.cycleCount) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.cycleCurrent++;</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.letterCurrent &lt; <span class="built_in">this</span>.letterCount) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> currLetter = <span class="built_in">this</span>.letters.eq(<span class="built_in">this</span>.letterCurrent);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.cycleCurrent = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">                currLetter.text(currLetter.attr(<span class="string">&#x27;data-orig&#x27;</span>)).css(<span class="string">&#x27;opacity&#x27;</span>, <span class="number">1</span>).addClass(<span class="string">&#x27;done&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.letterCurrent++;</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.done = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (!<span class="built_in">this</span>.done) &#123;</span></span><br><span class="line"><span class="javascript">                requestAnimationFrame(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    self.loop();</span></span><br><span class="line"><span class="javascript">                &#125;);</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    self.reset();</span></span><br><span class="line"><span class="javascript">                &#125;, <span class="number">750</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        $words = $(<span class="string">&#x27;.word&#x27;</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        $words.each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> $this = $(<span class="built_in">this</span>),</span></span><br><span class="line"><span class="javascript">                ticker = <span class="keyword">new</span> Ticker($this).reset();</span></span><br><span class="line"><span class="javascript">            $this.data(<span class="string">&#x27;ticker&#x27;</span>, ticker);</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>meta</code>里的<code>url</code>更改跳转的网址，<code>content</code>里更改跳转等待时间，单位为秒，<code>div</code>里更改显示的信息。</p><img title="" src="https://s4.ax1x.com/2022/02/16/HfODdU.gif" alt="" data-align="center">]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;因为最近有用到单页跳转的功能，发现一个挺有黑客气氛的跳转页面，备份一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>利用Hexo和Github Pages搭建个人博客</title>
    <link href="https://codersyn.github.io/2022/01/16/%E5%88%A9%E7%94%A8Hexo%E5%92%8CGithub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://codersyn.github.io/2022/01/16/%E5%88%A9%E7%94%A8Hexo%E5%92%8CGithub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-01-16T09:20:00.000Z</published>
    <updated>2023-04-16T14:00:52.619Z</updated>
    
    <content type="html"><![CDATA[<ol><li><h2 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h2><ul><li><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li><h4 id="新建一个Github仓库"><a href="#新建一个Github仓库" class="headerlink" title="新建一个Github仓库"></a>新建一个Github仓库</h4><p>仓库命名格式为<code>你的用户名.github.io</code>，如我的github用户名为websyn，那仓库名就为<code>websyn.github.io</code>。</p></li><li><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装<a href="https://nodejs.org/zh-cn/">Node.js</a></h4></li><li><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装<a href="https://git-scm.com/">Git</a></h4></li><li><h4 id="配置SSH-keys"><a href="#配置SSH-keys" class="headerlink" title="配置SSH keys"></a>配置SSH keys</h4><p>鼠标右键 -&gt; <strong>Git Bash Here</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;you@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>注意把<code>you@example.com</code>替换为你的邮箱，<code>Your Name</code>替换为你的用户名，然后一路回车，然后在<strong>C:\Users\你的用户名\.ssh</strong>目录下找到<code>id_rsa.pub</code>文件，用记事本打开复制里面的内容。</p><p>回到Github，依次点击<strong>你的头像 -&gt; Settings -&gt; SSH and GPG keys -&gt; SSH keys -&gt; New SSH key</strong>，Title随便写，Key的输入框里粘贴刚才复制的密钥，保存。</p></li></ul></li><li><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ul><li><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><em>note: 因为天朝国情可能需要挂代理或换成国内镜像源，文末有</em>。</p></li><li><h4 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置<code>_config.yml</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>repo后面的地址请复制你的github仓库地址替换，注意复制<strong>SSH</strong>地址，不要复制https地址。</p></li><li><h4 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>如果前面你的配置都正确的话，直接hexo三板斧就可以将你的博客上传到github上面了。</p></li><li><h4 id="开启Github-Pages"><a href="#开启Github-Pages" class="headerlink" title="开启Github Pages"></a>开启<strong>Github Pages</strong></h4><p>进入你新建的仓库，这时候仓库下应该有一堆你刚才推送上来的网页文件，依次点击上方的Settings -&gt; Pages，进去后选择master分支保存就开启了Pages，点击上方的域名即可访问你的网站。</p><p>如果你有自己的域名也可以在<strong>Custom domain</strong>下面的输入框里填上你的域名，记得在你的域名商处添加CNAME记录为<code>yourname.github.io</code>。</p></li></ul></li></ul></li><li><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><ul><li><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><p><code>hexo new &#39;文章名称&#39;</code>，新建的文章为Markdown文件，在目录<strong>blog\source\_posts</strong>下，打开即可编辑。</p></li><li><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p><code>hexo clean</code>为清除缓存文件和已生成的静态文件，<code>hexo g</code>为生成静态文件，<code>hexo d</code>为部署静态文件到你的仓库。</p><p>使用顺序不能错，可合并为<code>hexo clean &amp; hexo g &amp; hexo d</code>。</p></li><li><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>hexo默认加载的主题是<code>landscape</code>，如果不喜欢可去<a href="https://hexo.io/themes/">Themes | Hexo</a>挑选自己喜欢的主题。</p><p>找到喜欢的主题下载下来后把主题解压放到目录<strong>blog\themes</strong>下，然后在<code>_config.yml</code>里找到<code>theme:</code>项更改后面的值为你下载的主题名字，然后hexo三板斧后就能看到你更换后的主题了。</p><p>某些主题带有自己的config配置，请自行研究。</p></li></ul></li><li><h2 id="备份设置"><a href="#备份设置" class="headerlink" title="备份设置"></a>备份设置</h2><ul><li><h3 id="新建备份分支并推送到github"><a href="#新建备份分支并推送到github" class="headerlink" title="新建备份分支并推送到github"></a>新建备份分支并推送到github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:yourname/yourname.github.io.git</span><br><span class="line">git checkout -b blog</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;博客源文件&#x27;</span></span><br><span class="line">git push origin blog</span><br></pre></td></tr></table></figure><p>请注意把<code>git@github.com:yourname/yourname.github.io.git</code>替换为你自己的仓库SSH地址。</p><p>以后每次有更新执行一下<code>git add .</code> -&gt; <code>git commit -m &#39;博客源文件&#39;</code> -&gt; <code>git push origin blog</code>就能把文件备份到github了。</p></li><li><h3 id="还原备份"><a href="#还原备份" class="headerlink" title="还原备份"></a>还原备份</h3><p>如果换了电脑操作，首先在新电脑上安装<a href="https://nodejs.org/zh-cn/">Node.js</a>，安装<a href="https://git-scm.com/">Git</a>，配置<a href="https://sysy.su/2022/01/16/%E5%88%A9%E7%94%A8Hexo%E5%92%8CGithub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#%E9%85%8D%E7%BD%AESSH-keys">SSH keys</a>，然后克隆github仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b blog git@github.com:yourname/yourname.github.io.git</span><br></pre></td></tr></table></figure><p>请注意把<code>git@github.com:yourname/yourname.github.io.git</code>替换为你自己的仓库SSH地址。</p><p>然后会在本地出现一个<code>yourname.github.io</code>的文件夹，进去文件夹就可以看到你备份的hexo文件，接着在该文件夹里<strong>Git Bash Here</strong>或者在原git窗口输入<code>cd yourname.github.io.git</code>进入该文件夹，安装一下Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>注意并不需要<code>hexo init</code>这条命令，它的作用是初始化hexo，相当于把你的博客“恢复出厂设置”，所以不需要这步操作。</p><p>之后你就可以正常的hexo三板斧操作你的博客了。</p></li></ul></li><li><h2 id="可能会遇到的问题"><a href="#可能会遇到的问题" class="headerlink" title="可能会遇到的问题"></a>可能会遇到的问题</h2><ul><li><p>如果遇到安装不上hexo的情况可以考虑换成国内淘宝镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>文中出现的<code>blog</code>只是一个文件夹名，可替换为任意你喜欢的。</p></li><li><p>文中出现的<strong>Git Bash Here</strong>默认都是在D盘操作，因为为了方便把博客文件放在自己指定的位置。</p></li><li><p>想到再说。</p></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;搭建教程&quot;&gt;&lt;a href=&quot;#搭建教程&quot; class=&quot;headerlink&quot; title=&quot;搭建教程&quot;&gt;&lt;/a&gt;搭建教程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于freenom免费域名的申请方式</title>
    <link href="https://codersyn.github.io/2022/01/15/%E5%85%B3%E4%BA%8Efreenom%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E7%9A%84%E7%94%B3%E8%AF%B7%E6%96%B9%E5%BC%8F/"/>
    <id>https://codersyn.github.io/2022/01/15/%E5%85%B3%E4%BA%8Efreenom%E5%85%8D%E8%B4%B9%E5%9F%9F%E5%90%8D%E7%9A%84%E7%94%B3%E8%AF%B7%E6%96%B9%E5%BC%8F/</id>
    <published>2022-01-15T02:29:57.000Z</published>
    <updated>2023-04-16T14:00:52.619Z</updated>
    
    <content type="html"><![CDATA[<p>无痛流程：</p><p>①挂梯子</p><p>②注册或登录freenom</p><p>③修改个人资料为梯子IP对应的国家信息（百度生成外国人信息）</p><p>④正常注册即可</p><h1 id="———-以下已作废———"><a href="#———-以下已作废———" class="headerlink" title="———-以下已作废———-"></a>———-以下已作废———-</h1><h3 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h3><p>今天想起来给博客绑一个域名，之前买的短域名续费太贵了，就打算白嫖<strong>freenom</strong>，上次申请还好好的，这次又出现新问题了，按理说只要加载了Gooreplacer重定向插件以后就能正常申请了，但是我不知道是我忘记了freenom的密码还是什么原因导致一直登录不上去，重置密码提示没有这个邮箱账号，新注册账号又提示这个邮箱已被注册，这波操作属实给我整懵逼了。</p><img title="" src="https://s4.ax1x.com/2022/01/15/7GwEBd.png" alt="" data-align="center"><p>折腾半天后发现了一些端倪，邮箱应该是并未注册，因为我就算随便乱输入一串符号他也提示已经有用户注册了这个邮箱，至于邮箱无法找回密码也是因为未注册所以无法找回，所以问题应该在这里，不知道freenom通过什么办法限制了中国玩家的注册，测试通过代理和原生IP都不能注册，不同邮箱（163，qq，tom）也不能注册，不同浏览器（IE，Chrome，火狐）也不能注册。</p><p>那么问题来了就要解决问题，如果你挂了代理的话你会发现注册页面有一个<strong>Use social sign in</strong>，接着下面就是使用Google账户或者Facebook账户登录的选项：</p><p><img src="https://s4.ax1x.com/2022/01/15/7Gwljg.png"></p><p>前提是挂了代理才能看到这个选项，那么方法就来了，既然注册不了我就直接用Google账号登录，测试用谷歌账户登录以后就能自动注册freenom了。但是登录以后你记得关闭代理，然后才能继续注册新域名，<strong>记得开启Gooreplacer的重定向</strong>，为什么呢，因为挂了代理注册域名的话最后一步会提示你<strong>由于技术原因取消了你域名的注册</strong>，而如果你不挂代理，你甚至连下一步都点不了，freenom为了限制中国玩家真的是煞费苦心，毕竟净逮着一只羊薅，都快秃了，简直闻者伤心，听者流泪。所以一个曲线救国的方法就是先挂代理，然后利用Google账户登录，登录成功后取消代理，设置Gooreplacer重定向（关于这个<a href="https://sysy.su/2021/09/24/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/#%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D">这篇文章</a>有讲到），然后就能正常注册域名了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;无痛流程：&lt;/p&gt;
&lt;p&gt;①挂梯子&lt;/p&gt;
&lt;p&gt;②注册或登录freenom&lt;/p&gt;
&lt;p&gt;③修改个人资料为梯子IP对应的国家信息（百度生成外国人信息）&lt;/p&gt;
&lt;p&gt;④正常注册即可&lt;/p&gt;
&lt;h1 id=&quot;———-以下已作废———&quot;&gt;&lt;a href=&quot;#———-以下已作废</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>总得瞎几把写点什么吧</title>
    <link href="https://codersyn.github.io/2021/11/13/%E6%80%BB%E5%BE%97%E7%9E%8E%E5%87%A0%E6%8A%8A%E5%86%99%E7%82%B9%E4%BB%80%E4%B9%88%E5%90%A7/"/>
    <id>https://codersyn.github.io/2021/11/13/%E6%80%BB%E5%BE%97%E7%9E%8E%E5%87%A0%E6%8A%8A%E5%86%99%E7%82%B9%E4%BB%80%E4%B9%88%E5%90%A7/</id>
    <published>2021-11-13T03:19:48.000Z</published>
    <updated>2023-04-16T14:00:52.620Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>时间真的就像长了脚的妖怪，跑得飞快</p></blockquote><p>一转眼一个月时间就过去了，似乎也没有什么值得记录的东西，但来都来了，是吧，总得写点什么，上学的时候还知道写作文需要水字数呢，也算是水出经验来了，怎么说东拼西凑也得水个100字吧？人写日记也得一天一篇不是，我这一个月水一篇文章属实是轻松多了。</p><p>总的来说这个月基本每天就是例行公事的上下班，活生生一只混吃等死的咸鱼，也没啥娱乐活动，毕竟冬天来了不是，要搁以前，过冬也叫熬冬，熬过去了就过去了，熬不过去那也就不用熬了，现在虽说不至于要熬冬了，但是这寒风刺骨的，好像也没啥好娱乐的了，不如窝在被窝里来得嘘浮，到底是贫穷限制了我的想象，有钱人的快乐我体会不到，唉愁啊。</p><p>家里电脑显示器坏了，也懒得去修，毕竟好久没碰电脑了，估计它也觉得我好久没临幸它了，所以赌气似的坏掉了吧，唉罢了罢了，连个显示器都要开始欺负我了。索性直接转投手机阵营了，最近在打LOL手游，上到翡翠3上不去了，肯定不是我菜，都是队友的锅，嗯就是这样。不过我脾气是真的好啊，被坑的再惨也不会骂队友一句，毕竟谁都不容易不是，估计也是看到自己0/20/0的数据不好意思骂出口吧，唉愁啊。</p><p>在网上下载了《Primer C++》，打算继续自学之旅来着，看了没几天，公司来了个新入职的小哥哥丢给我带，带就带咯，那肯定倾囊相授不是，交流一番下来，人家学软件工程的，告诉我现在主流的语言都是Python了，就在我纠结到底要不要重新学一下Python的时候，人小哥哥第二天直接没来了，瞬间跟吃了翔一样难受，唉愁啊。</p><p>总之一个月就这样混过来了，很快一年也就这样混过去了，未来一片黑暗呐，也不知道车到山前是不是真有路诶，有时候想想真希望患上个绝症啥的，实在不行新冠病毒也成啊，这样就不必时刻思考未来到底是啥样了，但没办法啊，咱身体就是这么棒啊，吃嘛嘛香，哎哟不好意思一不小心就丧起来了，估计是最近网抑云听多了，人间不值得，唉愁啊。</p><p><img src="/../images/%E6%80%BB%E5%BE%97%E7%9E%8E%E5%87%A0%E6%8A%8A%E5%86%99%E7%82%B9%E4%BB%80%E4%B9%88%E5%90%A7/20200813155647_89033.jpg" alt="img"></p><p>再转眼就要到2022年了，在这里提前祝大家..唉算了还有个十二月呢，下个月再祝吧。</p><p>唉愁啊..</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;时间真的就像长了脚的妖怪，跑得飞快&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一转眼一个月时间就过去了，似乎也没有什么值得记录的东西，但来都来了，是吧，总得写点什么，上学的时候还知道写作文需要水字数呢，也算是水出经验来了，怎么说东拼西凑也得水个10</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>泰拉瑞亚修改教程 — 上</title>
    <link href="https://codersyn.github.io/2021/10/03/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%8A/"/>
    <id>https://codersyn.github.io/2021/10/03/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%8A/</id>
    <published>2021-10-02T23:44:44.000Z</published>
    <updated>2023-04-16T14:00:52.620Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一个关于泰拉瑞亚的简单修改教程，因为视频教程说有看不懂的地方，这里再做一个文字版本。</p></blockquote><h3 id="环境及版本"><a href="#环境及版本" class="headerlink" title="环境及版本"></a>环境及版本</h3><ul><li>当前游戏版本 v1.4.2.3</li><li>.NET Framework 4.8 (<a href="https://dotnet.microsoft.com/download/dotnet-framework/thank-you/net48-web-installer">官网下载</a>)</li><li>CheatEngine 7.3 (<a href="https://cheatengine.org/">官网下载</a>)</li></ul><h3 id="第一章-—-Player地址的获取方法"><a href="#第一章-—-Player地址的获取方法" class="headerlink" title="第一章 — Player地址的获取方法"></a>第一章 — Player地址的获取方法</h3><ul><li><p><del>第一步，删掉同志短剑</del>，#滑稽</p></li><li><p>第一步，进入游戏，打开CE，进程选择附加到Terraria，搜索血值和魔法值的组合地址：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003081103842.png" alt="image-20211003081103842"></p><p><em>注</em>：Value Type选择Grouped，然后在上面输入框内输入<code>4:100 4:100 4:100 4:20 4:20</code>，此处的100和20分别代表你的血值和魔法值，如你不是新角色，请自行更改为你当前的血值和魔法值，譬如你当前的角色血量为500，魔法值为200那就更改为<code>4:500 4:500 4:500 4:200 4:200</code>注意每组值之间有空格，然后点击First Scan。</p></li><li><p>第二步，开始搜索内存地址：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003091756165.png" alt="image-20211003091756165"></p><p><em>注</em>：图上的内存地址每个人都不相同，因为它是动态变化的，不必因为和我的不同而产生自己错了的错觉。</p></li><li><p>第三步，选中第三个血值地址，右键查看是什么访问了它：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003092657177.png" alt="image-20211003092657177"></p></li><li><p>第四步，返回游戏，触发一下内存地址的刷新，再返回CE，选择最后一个地址：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003100323003.png" alt="image-20211003100323003"></p><p><em>注</em>：务必先返回游戏触发一下，否则不会出现这个地址。地址不一定在最后一个，只要寄存器是<code>ebx</code>就行，选中该地址，然后点击右边的Show disassembler。</p></li><li><p>第五步，在弹出的页面复制动态地址的模块地址：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003101129902.png" alt="image-20211003101129902"></p></li><li><p>第六步，点击Tools，选择：Auto Assemble：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003101311839.png" alt="image-20211003101311839"></p></li><li><p>第七步，选择Template，选择Full Injection：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003101825161.png" alt="image-20211003101825161"></p></li><li><p>第八步，粘贴刚才复制的模块地址，然后点击OK进入编辑界面：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003102056277.png" alt="image-20211003102056277"></p></li><li><p>第九步，添加人造指针，此处直接贴出代码，自己按需修改：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">define(address,Terraria<span class="number">.</span>Player::UpdateLifeRegen+BE9)  // 这里如果不同请替换为你的地址</span><br><span class="line">define(bytes,8B <span class="number">83</span> D8 <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>)  // 同上</span><br><span class="line"></span><br><span class="line">[ENABLE]</span><br><span class="line"></span><br><span class="line">assert(address,bytes)</span><br><span class="line">alloc(newmem,<span class="number">$1000</span>)</span><br><span class="line">alloc(syn,<span class="number">4</span>)  // 为syn分配内存，syn可换为任意你喜欢的，下同</span><br><span class="line">registersymbol(syn)  // 注册全局名称syn</span><br><span class="line"></span><br><span class="line">label(code)</span><br><span class="line">label(return)</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">newmem:</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">code:</span></span><br><span class="line">  <span class="keyword">mov</span> [syn],<span class="built_in">ebx</span>  // 移动寄存器<span class="built_in">ebx</span>里的地址到syn里</span><br><span class="line">  <span class="keyword">mov</span> <span class="built_in">eax</span>,[<span class="built_in">ebx</span>+000003D8]</span><br><span class="line">  <span class="keyword">jmp</span> return</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="keyword">jmp</span> newmem</span><br><span class="line">  <span class="keyword">nop</span></span><br><span class="line"><span class="symbol">return:</span></span><br><span class="line"></span><br><span class="line">[DISABLE]</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">address:</span></span><br><span class="line">  <span class="built_in">db</span> bytes</span><br><span class="line">  // <span class="keyword">mov</span> <span class="built_in">eax</span>,[<span class="built_in">ebx</span>+000003D8]</span><br><span class="line"></span><br><span class="line">dealloc(newmem)</span><br><span class="line">dealloc(syn)  // 释放syn的内存</span><br><span class="line">unregistersymbol(syn)  // 取消syn的注册</span><br></pre></td></tr></table></figure><p><em>注</em>：有添加代码的地方都做了注释，你可以手动在编辑框内输入在对应的位置，也可直接复制粘贴到你的编辑框，注意如果地址不同请以你自己的地址为准，不要覆盖了。编辑完成后点击左上角的File，然后点击Assign to current cheat table，这样就把脚本添加到了CE的主界面。</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003104829820.png" alt="image-20211003104829820"></p></li><li><p>第十步，回到CE主界面，其他多余的窗口都可关掉，点击右边的Add Address Manually添加地址，在框内输入<code>syn</code>，并勾选下面的Hexadecimal，最后点击OK保存。</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003105507769.png" alt="image-20211003105507769"></p></li><li><p>第十一步，勾选Auto Assemble script，并复制刚才添加的syn的地址，然后点击Memory View：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003113940196.png" alt="image-20211003113940196"></p><p><em>注</em>：如果此步你的地址为000000，那返回游戏随便动一下就会有地址了。</p></li><li><p>第十二步，点击Memory View后来到这个页面，点击Tools，再点击Dissect data/structures：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003114504860.png" alt="image-20211003114504860"></p></li><li><p>第十三步，在输入框内粘贴刚才复制的地址，点击Structures，点击Define new structure：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003114823162.png" alt="image-20211003114823162"></p><p>并在弹出的窗口点击OK：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003115148994.png" alt="image-20211003115148994"></p><p><em>注</em>：此处输入框内自动显示的应是<code>Terraria.Player</code>才为正确，显示其他皆为错。</p></li><li><p>第十四步，根据英文描述修改自己想修改的东西即可：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003120351936.png" alt="image-20211003120351936"></p><p>下面贴出一些常用修改项：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">statLifeMax--生命值上限</span><br><span class="line">statLife--当前生命值</span><br><span class="line">statManaMax--魔法值上限</span><br><span class="line">statMana--当前魔法值</span><br><span class="line">breath--当前氧气值（配合锁定可达到无限氧气）</span><br><span class="line">buffType--buff类型（需配合buff时间使用）</span><br><span class="line">buffTime--buff持续时间</span><br><span class="line">inventory--Array[0]--物品栏第一个格子</span><br><span class="line">下面的项目都是在物品栏第一个格子下：</span><br><span class="line">fishingPole--渔力</span><br><span class="line">bait--鱼饵力</span><br><span class="line">useAnimation--挥动速度</span><br><span class="line">stack--数量</span><br><span class="line">maxStack--最大数量</span><br><span class="line">pick--镐力</span><br><span class="line">axe--斧力</span><br><span class="line">hammer--锤力</span><br><span class="line">damage--伤害</span><br><span class="line">knockBack--击退力</span><br><span class="line">healLife--回复生命</span><br><span class="line">healMana--回复魔法</span><br><span class="line">scale--大小</span><br><span class="line">defense--防御力</span><br><span class="line">shoot--弹幕</span><br><span class="line">useTime--弹幕数量（值越小越多）</span><br><span class="line">shootSpeed--弹幕飞行速度</span><br><span class="line">netID--物品ID（修改后需返回到主菜单重进可生效）</span><br></pre></td></tr></table></figure><p>到这里你基本能做到游戏内的大部分修改，但是某些特殊的功能无法做到（如无限召唤，一击必杀，地图高亮，物品全制作，时间加速等等），这些后续会慢慢讲到。现在的问题是你的修改目前是一次性的，如果退出了游戏就会导致无法再修改，因为目前的地址都是动态地址，重启游戏就会变动，所以我们需要把这些地址改为syn+偏移的形式，这样就算重启也不会失效。</p></li><li><p>第十五步，把动态地址改为指针地址，比如我想修改当前生命值：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003134408896.png" alt="image-20211003134408896"></p><p>然后回到CE地址列表：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211003134858113.png" alt="image-20211003134858113"></p><p><em>注</em>：你可能会想问为什么偏移是3d8，因为<img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/1633559546(1).png" alt="1633559546(1)">，仔细看英文描述前面的对应的就是这个地址的偏移。</p><p>再比如我想修改镐子的攻击力，那就把镐子放到物品栏第一个格子：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/image-20211004143026141.png" alt="image-20211004143026141"></p><p>然后在CE里定位到<img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/1633558673(1).png" alt="1633558673(1)">， 同样选中damage，按A键添加到地址列表，双击后把它修改为指针地址：</p><p><img src="/../images/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B/1633330269(1).png" alt="1633330269(1)"></p><p><em>注</em>：此处可看到damage的偏移为三级偏移，分别为D0，8，D4，那改为指针地址的时候就不能只添加D4，需要三个偏移都添加进去，如上图所示，需要注意的是多级指针的添加顺序是由下至上的。</p></li><li><p>最后，总结一下，看似步骤很多，其实也就两三分钟的事情，某些步骤完全就是一个操作拆分为几个步骤来讲，可谓真·保姆教程。简单来说就是搜索血值动态地址，根据动态地址的模块地址来编写脚本，实时获取到player动态地址，再根据player地址+偏移得到自己想修改的项。哦对了，最后一定别忘记保存你的地址列表为CT文件，别辛苦一番忘记保存了下次重新修改又得重新找地址。到这里第一章关于player地址的获取教程就结束了，下一章应该会写一些关于某些无法直接修改的项如何用脚本达到修改的目的，或者写如何用CE直接生成可直接运行的exe程序，再说吧。</p></li></ul><h3 id="第二章-—-利用脚本进行复杂的修改"><a href="#第二章-—-利用脚本进行复杂的修改" class="headerlink" title="第二章 — 利用脚本进行复杂的修改"></a>第二章 — 利用脚本进行复杂的修改</h3><p><a href="https://sysy.su/2022/02/17/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%AD/">第二章传送门</a></p><h3 id="第三章-—-制作修改器"><a href="#第三章-—-制作修改器" class="headerlink" title="第三章 — 制作修改器"></a>第三章 — 制作修改器</h3><p><a href="https://sysy.su/2022/02/24/%E6%B3%B0%E6%8B%89%E7%91%9E%E4%BA%9A%E4%BF%AE%E6%94%B9%E6%95%99%E7%A8%8B%20%E2%80%94%20%E4%B8%8B/">第三章传送门</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一个关于泰拉瑞亚的简单修改教程，因为视频教程说有看不懂的地方，这里再做一个文字版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;环境及版本&quot;&gt;&lt;a href=&quot;#环境及版本&quot; class=&quot;headerlink&quot; title=&quot;环境及版本</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Trojan搭建过程记录</title>
    <link href="https://codersyn.github.io/2021/09/24/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <id>https://codersyn.github.io/2021/09/24/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</id>
    <published>2021-09-24T10:04:21.000Z</published>
    <updated>2023-04-16T14:00:52.617Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为最近做梯子的服务器到期了，所以重新搭一个，以前一直用的SSR，但是由于GFW的原因越来越不稳定了，所以这次采用Trojan，顺便做个记录。</p></blockquote><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><ul><li>国外VPS一枚</li><li>SSH工具</li><li>域名一个</li><li>SSL证书</li><li>Trojan项目地址：<a href="https://github.com/trojan-gfw/trojan">https://github.com/trojan-gfw/trojan</a></li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h3><p>如果你已经有域名这步可跳过，因为我拿到的服务器是一年的，而我之前买的域名不足一年了，为了钱包的安全，我决定去申请一个免费域名。</p><p>免费申请域名的网站：<a href="https://www.freenom.com/">https://www.freenom.com/</a>，这个应该大家都熟悉，此处注意一个点就是freenom似乎禁止了中国玩家的申请，可用的申请办法是直接挂代理申请，如果遇到技术错误导致域名未注册成功的话去百度找一个外国人信息修改你的资料就行了，因为挂代理它会检测你的ip地址，找ip地址对应的国家外国人信息填上就行了。</p><p><em>NOTE</em>：①如果输入域名点击<strong>检查</strong>按钮无反应把语言调为英文再试试；②确定想要的域名后点击<strong>获取/Git it now</strong>按钮出现<strong>不可用/x</strong>有两种解决办法：1.在域名后面加后缀再点击<strong>检查</strong>按钮，如你想要synblog.ga这个域名那就输入整个synblog.ga再点击<strong>检查</strong>按钮，不要只输入synblog；2.先注册登录后再申请域名，关于找不到注册入口的可依次点击首页顶部的<strong>合作伙伴/Partners</strong>—<strong>开发者/Developers</strong>选项，把页面拉到最下面点击<strong>Get a Random Domains Account today</strong>按钮即可进入到注册页面；</p><p>注册过程无难点，就不再赘述，按照要求填入信息就好，注册成功后先放一边，然后进行下一步操作。</p><h3 id="把域名放到DNSPod解析"><a href="#把域名放到DNSPod解析" class="headerlink" title="把域名放到DNSPod解析"></a>把域名放到DNSPod解析</h3><p>成功拿到域名后就打开<a href="https://www.dnspod.cn/">DNSpod</a>，注册一个账号并且实名认证。然后依次在<strong>控制管理台</strong>—<strong>DNS解析</strong>—<strong>添加域名</strong>处输入刚才在freenom申请到的域名，然后根据指示复制DNSPod提供给你的两个DNS服务器：</p><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926154237563.png" alt="image-20210926154237563"></p><p>在freenom里点击<strong>Manage Domain</strong>：</p><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926154156139.png" alt="image-20210926154156139"></p><p><strong>Management Tools</strong>—<strong>Nameservers</strong>：</p><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926155150193.png" alt="image-20210926155150193"></p><p>选择<strong>Use custom nameservers</strong>，并在下面粘贴刚才复制过来的DNS服务器：</p><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926155553613.png" alt="image-20210926155553613"></p><p>保存即可。</p><p>然后返回DNSPod把域名解析到你的服务器IP就行。至于为什么不使用Cloudflare，原因是CF不支持申请freenom域名的SSL证书。如果非freenom的域名可以用CF，用CF的话下面acme申请证书把DP的指令换成CF的就行。</p><p>最后创建并查看api密钥复制备用，点击右上角的账号中心，选择<strong>API密钥</strong>：</p><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926191840888.png" alt="image-20210926191840888"></p><p>选择<strong>DNSPod Token</strong>：</p><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926191932287.png" alt="image-20210926191932287"></p><h3 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h3><ul><li>更新系统</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update <span class="comment">#centos</span></span><br><span class="line">apt update &amp;&amp; apt upgrade -y <span class="comment">#debian/ubuntu</span></span><br></pre></td></tr></table></figure><ul><li>关闭防火墙<strong>或者</strong>开放80和443端口（此处二选一即可）#centos</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service  <span class="comment">#关闭防火墙</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent  <span class="comment">#开放80端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=443/tcp --permanent  <span class="comment">#开放443端口</span></span><br><span class="line">firewall-cmd --reload  <span class="comment">#如果是选择开放端口那需要重载防火墙才能生效</span></span><br></pre></td></tr></table></figure><ul><li>安装acme.sh依赖</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y socat cronie curl <span class="comment">#centos</span></span><br><span class="line">apt install -y socat cron curl <span class="comment">#debian/ubuntu</span></span><br></pre></td></tr></table></figure><ul><li>安装trojan依赖</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y xz <span class="comment">#centos</span></span><br><span class="line">apt install -y libcap2-bin xz-utils nano <span class="comment">#debian/ubuntu</span></span><br></pre></td></tr></table></figure><ul><li>启动crontab</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start crond <span class="comment">#centos</span></span><br><span class="line">systemctl <span class="built_in">enable</span> crond <span class="comment">#centos</span></span><br><span class="line">systemctl start cron <span class="comment">#debian/ubuntu</span></span><br><span class="line">systemctl <span class="built_in">enable</span> cron <span class="comment">#debian/ubuntu</span></span><br></pre></td></tr></table></figure><ul><li>创建存放证书的文件夹</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/<span class="built_in">local</span>/etc/certfiles</span><br></pre></td></tr></table></figure><ul><li>允许httpd联网</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect 1</span><br></pre></td></tr></table></figure><p>CentOS反向代理需要配置SELinux允许httpd模块可以联网，否则服务器会返回502错误，如果出现SELinux is disabled错误，说明SELinux已经被彻底的关闭了，那可以直接跳过。</p><h2 id="安装并配置nginx"><a href="#安装并配置nginx" class="headerlink" title="安装并配置nginx"></a>安装并配置nginx</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><ul><li>安装epel #centos</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><ul><li>安装nginx</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx <span class="comment">#centos</span></span><br><span class="line">apt install -y nginx <span class="comment">#debian/ubuntu</span></span><br></pre></td></tr></table></figure><h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><ul><li>编辑confing</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/nginx.conf <span class="comment">#centos</span></span><br><span class="line">vi /etc/nginx/sites-available/default <span class="comment">#debian/ubuntu</span></span><br></pre></td></tr></table></figure><ul><li>删除原有的server代码块</li></ul><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926185617676-16327033247461.png" alt="image-20210926185617676"></p><ul><li>替换server代码块为下面这个：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 127.0.0.1:80 default_server;</span><br><span class="line">    server_name your_domain;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass https://www.baidu.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 127.0.0.1:80;</span><br><span class="line">    server_name your_server_ip;</span><br><span class="line">    <span class="built_in">return</span> 301 https://your_domain<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 0.0.0.0:80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name _;</span><br><span class="line">    <span class="built_in">return</span> 301 https://$host<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意替换上面的<code>your_domain</code>和<code>your_server_ip</code>为你自己的域名和IP，<code>proxy_pass</code>后面的网址为你想反向代理的网址，你可以替换为任意没有敏感信息的网站。<br>解释一下这些虚拟主机的一些细节：第一个server接收来自Trojan的流量，第二个server也是接收来自Trojan的流量，但是这个流量尝试使用IP而不是域名访问服务器，所以将其认为是异常流量，并重定向到域名，第三个server接收除127.0.0.1:80外的所有80端口的流量并重定向到443端口，这样便开启了全站https，可有效的防止恶意探测。</p><p>如果不想反代而是设置伪装站点，或者本身有网站，那把第一个server修改下就行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name your_domain;</span><br><span class="line">    root /var/www/html;</span><br><span class="line">    index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后把你的网站文件放在对应的目录下就行了，一般centos的默认html文件在<code>/usr/share/nginx/html</code>下，debian/ubuntu的默认html文件在<code>/var/www/html</code>下，根据你的系统选择并更改上面的<code>root</code>项即可，当然你想放在其他位置也行，这样写只是为了方便快捷一些。</p><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><ul><li>启动nginx</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>如果报错多半是SELinux在搞事情，可以彻底关闭SELinux。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br></pre></td></tr></table></figure><p>找到<code>SELINUX=xxx</code>，改为<code>SELINUX=disabled</code>并<code>reboot</code>重启服务器即可。</p><ul><li>让nginx开机自启</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><p>这里使用acme.sh自动签发证书。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh -s email=my@example.com</span><br></pre></td></tr></table></figure><p><code>my@example.com</code>改为你的邮箱。</p><p>安装完成后重新加载 Bash：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="添加API密钥"><a href="#添加API密钥" class="headerlink" title="添加API密钥"></a>添加API密钥</h3><ul><li>DNSpod</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DP_Id=<span class="string">&quot;1234&quot;</span>  <span class="comment">#1234改为之前复制的dnspod的id</span></span><br><span class="line"><span class="built_in">export</span> DP_Key=<span class="string">&quot;token&quot;</span>  <span class="comment">#token改为之前复制的dnspod的token</span></span><br></pre></td></tr></table></figure><ul><li>Cloudflare</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CF_Key=<span class="string">&quot;&lt;你的 Global API Key&gt;&quot;</span></span><br><span class="line"><span class="built_in">export</span> CF_Email=<span class="string">&quot;&lt;你的cloudflare邮箱&gt;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="申请证书-1"><a href="#申请证书-1" class="headerlink" title="申请证书"></a>申请证书</h3><ul><li>DNSpod</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_dp -d example.com <span class="comment">#example.com改为你的域名</span></span><br></pre></td></tr></table></figure><ul><li>Cloudflare</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_cf -d example.com <span class="comment">#example.com改为你的域名</span></span><br></pre></td></tr></table></figure><p>如果要申请通配证书则如下：</p><ul><li>DNSpod</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_dp -d example.com -d *.example.com <span class="comment">#example.com改为你的域名</span></span><br></pre></td></tr></table></figure><ul><li>Cloudflare</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_cf -d example.com -d *.example.com <span class="comment">#example.com改为你的域名</span></span><br></pre></td></tr></table></figure><p>等待一会，出现这四个证书文件则为申请成功：</p><p><img src="/../images/Trojan%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20210926194858419.png" alt="image-20210926194858419"></p><p>如果没有出现上图而是出现一串红色的信息，未申请成功的话，大概率是因为zerossl抽风，可以更换默认CA为Let’s Encrypt：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --set-default-ca --server letsencrypt</span><br></pre></td></tr></table></figure><p>之后再重新执行一遍申请证书的指令即可。</p><h3 id="安装证书-1"><a href="#安装证书-1" class="headerlink" title="安装证书"></a>安装证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --install-cert -d example.com --key-file /usr/<span class="built_in">local</span>/etc/certfiles/private.key --fullchain-file /usr/<span class="built_in">local</span>/etc/certfiles/certificate.crt</span><br></pre></td></tr></table></figure><p>使用acme.sh将证书安装到certfiles目录，这样acme.sh更新证书的时候会自动将新的证书安装到这里，注意把<code>example.com</code>替换为你的域名</p><h3 id="配置acme-sh自动更新"><a href="#配置acme-sh自动更新" class="headerlink" title="配置acme.sh自动更新"></a>配置acme.sh自动更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --upgrade  --auto-upgrade</span><br></pre></td></tr></table></figure><p>到这里不出意外就能访问你带https的域名了，如果你反向代理了百度的话，会进入百度的页面</p><h2 id="安装并配置trojan"><a href="#安装并配置trojan" class="headerlink" title="安装并配置trojan"></a>安装并配置trojan</h2><h3 id="安装trojan"><a href="#安装trojan" class="headerlink" title="安装trojan"></a>安装trojan</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/trojan-gfw/trojan-quickstart/master/trojan-quickstart.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="编辑trojan配置"><a href="#编辑trojan配置" class="headerlink" title="编辑trojan配置"></a>编辑trojan配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/etc/trojan/config.json</span><br></pre></td></tr></table></figure><p>修改<strong>password</strong>为你喜好的密码，修改<strong>cert</strong>的地址为证书所在地址：<code>/usr/local/etc/certfiles/certificate.crt</code>，修改<strong>key</strong>地址为证书所在地址：<code>/usr/local/etc/certfiles/private.key</code>，保存退出即可。</p><h3 id="启动trojan"><a href="#启动trojan" class="headerlink" title="启动trojan"></a>启动trojan</h3><ul><li>启动trojan</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart trojan</span><br></pre></td></tr></table></figure><ul><li>添加开机自启</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> trojan</span><br></pre></td></tr></table></figure><h3 id="配置trojan自动加载更新后的证书"><a href="#配置trojan自动加载更新后的证书" class="headerlink" title="配置trojan自动加载更新后的证书"></a>配置trojan自动加载更新后的证书</h3><ul><li>编辑crontab文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><ul><li>写入定时任务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 1 * * killall -s SIGUSR1 trojan</span><br></pre></td></tr></table></figure><p>保存退出即可。</p><h2 id="安装bbr加速（可选）"><a href="#安装bbr加速（可选）" class="headerlink" title="安装bbr加速（可选）"></a>安装bbr加速（可选）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>放个一键脚本自己按要求操作吧，我实在写不动了…</p><h2 id="安装客户端"><a href="#安装客户端" class="headerlink" title="安装客户端"></a>安装客户端</h2><ul><li><p>Windows版本</p><ol><li><p><a href="https://drive.sysy.su/d/%E8%BD%AF%E4%BB%B6/Trojan-Qt5-Windows-1.4.0.7z">Trojan-Qt5</a></p></li><li><p><a href="https://github.com/2dust/v2rayN/releases">V2rayN</a></p></li></ol><p>两者皆可，自行下载。</p></li><li><p>Android版本</p><ol><li><a href="https://github.com/trojan-gfw/igniter/releases">igniter</a></li></ol></li><li><p>iOS版本</p><p>自行在App Store下载shadowrocket</p></li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li>重载nginx配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><ul><li>trojan运行状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status trojan</span><br></pre></td></tr></table></figure><ul><li>关闭trojan</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop trojan</span><br></pre></td></tr></table></figure><ul><li>跟踪trojan日志</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u trojan -f</span><br></pre></td></tr></table></figure><h1 id="—END—"><a href="#—END—" class="headerlink" title="—END—"></a>—END—</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;因为最近做梯子的服务器到期了，所以重新搭一个，以前一直用的SSR，但是由于GFW的原因越来越不稳定了，所以这次采用Trojan，顺便做个记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前置条件&quot;&gt;&lt;a href=&quot;#前置条件&quot; clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Codecademy C++ 练习题</title>
    <link href="https://codersyn.github.io/2021/09/23/Codecademy-C-%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <id>https://codersyn.github.io/2021/09/23/Codecademy-C-%E7%BB%83%E4%B9%A0%E9%A2%98/</id>
    <published>2021-09-22T22:44:50.000Z</published>
    <updated>2023-04-16T14:00:52.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CODE-CHALLENGE-C-FUNCTIONS"><a href="#CODE-CHALLENGE-C-FUNCTIONS" class="headerlink" title="CODE CHALLENGE: C++ FUNCTIONS"></a>CODE CHALLENGE: C++ FUNCTIONS</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><strong>1.</strong> Write a function <code>introduction()</code> with no return value that has:</p><ul><li><code>std::string</code> parameter named <code>first_name</code>.</li><li><code>std::string</code> parameter named <code>last_name</code>.</li></ul><p>The function should print the <code>last_name</code>, followed by a comma, a space, <code>first_name</code> another space, and finally <code>last_name</code> again.</p><p>For example, <code>introduction(&quot;James&quot;, &quot;Bond&quot;);</code> should print the following:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bond, James Bond</span><br></pre></td></tr></table></figure><p><strong>Answer</strong> :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define introduction() here:</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">introduction</span><span class="params">(std::string first_name, std::string last_name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; last_name &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; first_name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; last_name &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">introduction</span>(<span class="string">&quot;Beyonce&quot;</span>, <span class="string">&quot;Knowles&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Average"><a href="#Average" class="headerlink" title="Average"></a>Average</h2><p><strong>1.</strong> Write a function <code>average()</code> that takes:</p><ul><li>A <code>double</code> parameter named <code>num1</code>.</li><li>A <code>double</code> parameter named <code>num2</code>.</li></ul><p>The function should return a <code>double</code> that is the average of the arguments passed in.</p><p><strong>Answer</strong> :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define average() here:</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">average</span><span class="params">(<span class="keyword">double</span> num1, <span class="keyword">double</span> num2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    total = (num1 + num2) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="built_in">average</span>(<span class="number">42.0</span>, <span class="number">24.0</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="built_in">average</span>(<span class="number">1.0</span>, <span class="number">2.0</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Tenth-Power"><a href="#Tenth-Power" class="headerlink" title="Tenth Power"></a>Tenth Power</h2><p><strong>1.</strong> Write a function named <code>tenth_power()</code> that has:</p><ul><li>An <code>int</code> parameter named <code>num</code>.</li></ul><p>The function should return <code>num</code> raised to the 10th power.</p><p><strong>Answer</strong> :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define tenth_power() here:</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">tenth_power</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    num = num * num * num * num * num * num * num * num * num * num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">    <span class="comment">//按理说最优解应该为return pow(num, 10); 但此时还没有学到调用其他文件的函数。</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="built_in">tenth_power</span>(<span class="number">0</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="built_in">tenth_power</span>(<span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="built_in">tenth_power</span>(<span class="number">2</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="First-Three-Multiples"><a href="#First-Three-Multiples" class="headerlink" title="First Three Multiples"></a>First Three Multiples</h2><p><strong>1.</strong> Write a function named <code>first_three_multiples()</code> that has:</p><ul><li>An <code>int</code> parameter named <code>num</code>.</li></ul><p>The function should return an <code>std::vector</code> of the first three multiples of <code>num</code> in ascending order.</p><p>For example, <code>first_three_multiples(7)</code> should return a vector with <code>7</code>, <code>14</code>, and <code>21</code>.</p><p><strong>Answer</strong> :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define first_three_multiples() here:</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">int</span>&gt; <span class="title">first_three_multiples</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> std::vector&lt;<span class="keyword">int</span>&gt; &#123;num, num * <span class="number">2</span>, num * <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> element : <span class="built_in">first_three_multiples</span>(<span class="number">8</span>)) &#123;</span><br><span class="line">    std::cout &lt;&lt; element &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Water-Plant"><a href="#Water-Plant" class="headerlink" title="Water Plant"></a>Water Plant</h2><p><strong>1.</strong> Define a function <code>needs_water()</code> that accepts:</p><ul><li>An <code>int</code> number of <code>days</code> since the previous watering.</li><li>A <code>bool</code> value <code>is_succulent</code>. (A value of <code>true</code> would indicate that the plant is a succulent.)</li></ul><p>Inside the function, you’ll need some conditional logic:</p><ul><li>If <code>is_succulent</code> is <code>false</code> and <code>days</code> is greater than <code>3</code>, return <code>&quot;Time to water the plant.&quot;</code>.</li><li>If <code>is_succulent</code> is <code>true</code> and <code>days</code> is <code>12</code> or less, return <code>&quot;Don&#39;t water the plant!&quot;</code>.</li><li>If <code>is_succulent</code> is <code>true</code> and <code>days</code> is greater than or equal to <code>13</code>, return <code>&quot;Go ahead and give the plant a little water.&quot;</code>.</li><li>Otherwise, return <code>&quot;Don&#39;t water the plant!&quot;</code>.</li></ul><p><strong>Note:</strong> Don’t print the strings; return them from the function.</p><p><strong>Answer</strong> :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define needs_water() here:</span></span><br><span class="line"><span class="function">std::string <span class="title">needs_water</span><span class="params">(<span class="keyword">int</span> days, <span class="keyword">bool</span> is_succulent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (days &gt; <span class="number">3</span> &amp;&amp; is_succulent == <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Time to water the plant.&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (days &lt;= <span class="number">12</span> &amp;&amp; is_succulent == <span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Don&#x27;t water the plant!&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (days &gt;= <span class="number">13</span> &amp;&amp; is_succulent == <span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Go ahead and give the plant a little water.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  std::cout &lt;&lt; <span class="built_in">needs_water</span>(<span class="number">10</span>, <span class="literal">false</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Palindrome"><a href="#Palindrome" class="headerlink" title="Palindrome"></a>Palindrome</h2><p><strong>1.</strong> Define a function <code>is_palindrome()</code> that takes:</p><ul><li>An <code>std::string</code> parameter <code>text</code>.</li></ul><p>The function should return:</p><ul><li><code>true</code> if <code>text</code> is a palindrome.</li><li><code>false</code> if <code>text</code> is not a palindrome.</li></ul><p>(A palindrome is any text that has the same characters backwards as it does forwards. For example, “hannah” and “racecar” are palindromes, while “menu” and “ardvark” are not.)</p><p>We will not test for edge cases such as capitalization or spaces.</p><p><strong>Answer</strong> :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//关于获取字符串长度的方法除了用vector还可以用string的length</span></span><br><span class="line"><span class="comment">// Define is_palindrome() here:</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_palindrome</span><span class="params">(std::string text)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  std::string flips;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = text.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    flips = flips + text[i];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> flips == text;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  std::cout &lt;&lt; <span class="built_in">is_palindrome</span>(<span class="string">&quot;madam&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  std::cout &lt;&lt; <span class="built_in">is_palindrome</span>(<span class="string">&quot;ada&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  std::cout &lt;&lt; <span class="built_in">is_palindrome</span>(<span class="string">&quot;lovelace&quot;</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此关于函数篇的六个小练习题完结。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CODE-CHALLENGE-C-FUNCTIONS&quot;&gt;&lt;a href=&quot;#CODE-CHALLENGE-C-FUNCTIONS&quot; class=&quot;headerlink&quot; title=&quot;CODE CHALLENGE: C++ FUNCTIONS&quot;&gt;&lt;/a&gt;CODE </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于博客重启这件事</title>
    <link href="https://codersyn.github.io/2021/09/21/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E9%87%8D%E5%90%AF%E8%BF%99%E4%BB%B6%E4%BA%8B/"/>
    <id>https://codersyn.github.io/2021/09/21/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E9%87%8D%E5%90%AF%E8%BF%99%E4%BB%B6%E4%BA%8B/</id>
    <published>2021-09-21T01:27:39.000Z</published>
    <updated>2023-04-16T14:00:52.619Z</updated>
    
    <content type="html"><![CDATA[<p>时隔一年，个人博客又重启了，这次基本不会关闭了，如果说之前是因为资金不足无法维持服务器的话，那么这次我把博客部署在了码云上就不存在这个理由了，<del>哎白嫖真香</del>。</p><p>直到现在我也还没想好这个博客的定位是什么，要说技术博客那我也没什么技术，要说生活博客那我好像也没什么美好的东西可以分享，其实这也算是之前关停博客的一个因素，因为不知道自己要做什么，就很迷茫。既然想不出，那就索性不去想，当个日记本来写好了，人总要有几件坚持做下去的事不是。</p><p>说起来今天还是中秋节，你有没有在吃月饼呢，有没有和喜欢的人在一起看月亮呢。</p><p><img src="/images/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E9%87%8D%E5%90%AF%E8%BF%99%E4%BB%B6%E4%BA%8B/wallhaven-p8yq59_1920x1080.png"></p><blockquote><p>海上月是天上月，眼前人是心上人。</p><p style="text-align:right">——张爱玲</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;时隔一年，个人博客又重启了，这次基本不会关闭了，如果说之前是因为资金不足无法维持服务器的话，那么这次我把博客部署在了码云上就不存在这个理由了，&lt;del&gt;哎白嫖真香&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;直到现在我也还没想好这个博客的定位是什么，要说技术博客那我也没什么技术，要说生活博</summary>
      
    
    
    
    
  </entry>
  
</feed>
